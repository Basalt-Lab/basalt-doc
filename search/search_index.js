var __index = {"config":{"lang":["en","fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"fr/index.html","title":"Basalt","text":""},{"location":"fr/index.html#introduction","title":"Introduction","text":"<p>Bienvenue dans la documentation de Basalt.</p> <p>Basalt est une mini suite de packages sp\u00e9cialement con\u00e7ue pour le d\u00e9veloppement avec Bun et d\u00e9velopp\u00e9e en TypeScript et en ESM.</p> <p>Chaque module de Basalt vise \u00e0 fournir des outils efficaces et faciles \u00e0 utiliser, de plus je met un point d'honneur \u00e0 fournir des packages avec 0 d\u00e9pendances.</p> Attention <p>Basalt est actuellement en d\u00e9veloppement, et est sujet \u00e0 des changements fr\u00e9quents.</p> <p>La documentation et les fonctionnalit\u00e9s continueront d'\u00e9voluer.</p> <p>Le d\u00e9veloppement de Basalt avance peu \u00e0 peu, je travail sur plusieurs projets en parall\u00e8le, je fais donc au mieux avec le temps que je dispose.</p> <p>Il est actuellement recommand\u00e9 pour des projets exp\u00e9rimentaux ou non critiques.</p> <p>N'h\u00e9sitez pas \u00e0 me contacter pour toute question ou suggestion ou m\u00eame si vous souhaitez rapporter un bug.</p>"},{"location":"fr/index.html#contact","title":"Contact","text":"<p>Vous pouvez me contacter sur : basalt-lab@proton.me ou sur Discord : <code>necrelox</code></p> <p>Note</p> <p>Si vous voyez des erreurs, j'en suis vraiment d\u00e9sol\u00e9 je fais de mon mieux c'est la premi\u00e8re fois que je fais \u00e7a. N'h\u00e9sitez pas si vous souhait\u00e9 discuter ou participer \u00e0 ce projet, je suis ouvert \u00e0 toute proposition.</p>"},{"location":"fr/basalt-auth/contribution.html","title":"Contribuer \u00e0 Basalt Auth","text":""},{"location":"fr/basalt-auth/contribution.html#introduction","title":"Introduction","text":"<p>Si vous souhaiter contribuer \u00e0 Basalt Auth, ce serait avec plaisir !</p> <p>Les \u00e9tapes suivantes vous guideront \u00e0 travers le processus de contribution, en vous aidant \u00e0 comprendre comment vous pouvez apporter votre aide au projet.</p>"},{"location":"fr/basalt-auth/contribution.html#processus-de-contribution","title":"Processus de contribution","text":"<pre><code>gitGraph:\noptions\n{\n    \"nodeSpacing\": 150,\n    \"nodeRadius\": 10\n}\nend\ncommit\nbranch develop\ncheckout develop\ncommit\nbranch feature\ncheckout feature\ncommit\ncommit\ncheckout develop\nmerge feature\ncheckout main\nmerge develop</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9 \u00e0 partir de la branche <code>develop</code>.</li> <li>Committez vos changements (<code>git commit -m 'feat: Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.     Veuillez utiliser des conventionnal commits pour vos messages de commit, cela permettra de g\u00e9n\u00e9rer automatiquement les notes de version.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>develop</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>develop</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>develop</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-auth/contribution.html#notes-supplementaires","title":"Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible.  </p> <p>Soyez ouvert aux retours et aux suggestions sur votre pull request.</p>"},{"location":"fr/basalt-auth/contribution.html#remerciement","title":"Remerciement","text":"<p>Je vous remercie sinc\u00e8rement pour votre int\u00e9r\u00eat \u00e0 contribuer \u00e0 Basalt Auth. Votre aide est grandement appr\u00e9ci\u00e9e et contribue \u00e0 l'am\u00e9lioration du projet.</p>"},{"location":"fr/basalt-auth/getting-started.html","title":"Getting started","text":""},{"location":"fr/basalt-auth/getting-started.html#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Bienvenue dans le guide de d\u00e9marrage rapide de Basalt Auth !</p>"},{"location":"fr/basalt-auth/getting-started.html#installation","title":"Installation","text":"<p>Int\u00e9grer Basalt Auth dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-auth</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet :</p> <p>NPM : <pre><code>npm i @basalt-lab/basalt-auth\n</code></pre></p> <p>PNPM : <pre><code>pnpm i @basalt-lab/basalt-auth\n</code></pre></p> npm i @basalt-lab/basalt-authadded 1 package, and audited 1 package in 1sfound 0 vulnerabilities <p>Vous \u00eates pr\u00eat \u00e0 commencer ! Bon d\u00e9veloppement \ud83d\ude80</p>"},{"location":"fr/basalt-auth/index.html","title":"Index","text":""},{"location":"fr/basalt-auth/index.html#basalt-auth","title":"Basalt Auth","text":"<p>Warning</p> <p>Basalt est actuellement \u00e0 ses d\u00e9buts, s'il vous pla\u00eet soyez indulgent et n'hesitez pas \u00e0 faire un retour sur votre exp\u00e9rience par mail : basalt-lab@proton.me ou par Discord <code>necrelox</code>.</p>"},{"location":"fr/basalt-auth/index.html#introduction","title":"Introduction","text":"<p>Basalt Auth est un module d'authentification bas\u00e9 sur des tokens, con\u00e7u pour \u00eatre simple \u00e0 utiliser.</p> <p>La particularit\u00e9 de Basalt Auth r\u00e9side dans son syst\u00e8me de paire de cl\u00e9s : chaque token est associ\u00e9 \u00e0 sa propre paire, une caract\u00e9ristique qui le diff\u00e9rencie des JWT standards.</p> <p>C'est un m\u00e9lange entre de l'OAT et des JWT, les tokens ainsi que les clefs publiques doivent \u00eatre stock\u00e9es c\u00f4t\u00e9 serveur pour \u00eatre v\u00e9rifi\u00e9es. Pour cela je conseille l'utilisation d'un store comme Redis ou DragonFly</p>"},{"location":"fr/basalt-auth/index.html#pourquoi-basalt-auth","title":"Pourquoi Basalt Auth ?","text":"<p>L'objectif derri\u00e8re Basalt Auth \u00e9tait de d\u00e9velopper un syst\u00e8me d'authentification personnalis\u00e9 qui s'inspire de la structure des JWT, mais avec quelques subtilit\u00e9s.</p> <p>Cette approche n'est pas n\u00e9cessairement sup\u00e9rieure aux m\u00e9thodes conventionnelles, c'est plut\u00f4t une exploration personnelle dans la conception de syst\u00e8mes d'authentification.</p> <p>Il est important de noter que la s\u00e9curit\u00e9 est une discipline \u00e9volutive, et les m\u00e9rites de cette structure par rapport aux standards \u00e9tablis n'ont pas \u00e9t\u00e9 pleinement \u00e9valu\u00e9s.</p> <p>Warning</p> <p>Basalt Auth ne cherche pas \u00e0 remplacer les solutions existantes, mais plut\u00f4t \u00e0 offrir une alternative pour des cas d'utilisation sp\u00e9cifiques.</p>"},{"location":"fr/basalt-auth/index.html#polyvalence-et-compatibilite","title":"Polyvalence et Compatibilit\u00e9","text":"<p>Basalt Auth est con\u00e7u pour \u00eatre utilis\u00e9 dans un context backend. Il n'a pas de d\u00e9pendances, ce qui le rend facile \u00e0 int\u00e9grer dans n'importe quel projet Node.js.</p>"},{"location":"fr/basalt-auth/references.html","title":"R\u00e9f\u00e9rences","text":"<p>Vous pouvez retrouver les r\u00e9f\u00e9rences de la librairie ici \u27a1\ufe0f https://basalt-lab.github.io/basalt-auth/.</p>"},{"location":"fr/basalt-auth/example/authentication.html","title":"Authentication","text":""},{"location":"fr/basalt-auth/example/authentication.html#signature-dun-token","title":"Signature d'un token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\nconsole.log(tokenSignResult.token);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\nconsole.log(tokenSignResult.token);\n</code></pre> node example.jseyJ1dWlkIjoiZDk4MTcwMjgtM2EzZS00YWYyLTgwNzYtOTExZGFlZThiMGIzIiwiZXhwIjoiMjAyNC0wMy0yMlQxMjowOTo0MS4yNThaIiwiaXNzdWVyIjoiQmFzYWx0LUlzc3VlciIsImF1ZGllbmNlIjoiQmFzYWx0LUF1ZGllbmNlIn0=.e30=.PJpP4zbxX4SaYD7hIj0wZGIqhSs8SbGdJ0W+o/Pr6WJyOhJTvRsIqQpf8sCvTFWWGyCx5ZGeczT0E1RHBE7GBg=="},{"location":"fr/basalt-auth/example/authentication.html#signature-dun-token-avec-payload","title":"Signature d'un token avec payload","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({\n    usename: 'User1',\n});\nconsole.log(tokenSignResult.token);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({\n    usename: 'User1',\n});\nconsole.log(tokenSignResult.token);\n</code></pre> node example.jseyJ1dWlkIjoiMzAzNjQ2ODMtYWYxMC00NjcyLTkwNTQtMmY2YWNmM2E1ZGNlIiwiZXhwIjoiMjAyNC0wMy0yMlQxMjoxMjo1NS41NjlaIiwiaXNzdWVyIjoiQmFzYWx0LUlzc3VlciIsImF1ZGllbmNlIjoiQmFzYWx0LUF1ZGllbmNlIn0=.eyJ1c2VuYW1lIjoiVXNlcjEifQ==.heBWyPtSqmwR/FTShaeqBm7NtCxxE2/faIRc1vQG80mMwOlTTzeWcPD8iNecwtkij/GW6RlEADex4uxCjULFAw=="},{"location":"fr/basalt-auth/example/authentication.html#signature-dun-token-avec-un-temps-dexpiration","title":"Signature d'un token avec un temps d'expiration","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult, BasaltTokenExpiry } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\n// you can use enum or number (default is 1 hour)\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({}, BasaltTokenExpiry.ONE_DAY);\nconsole.log(tokenSignResult.token);\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\n// you can use enum or number (default is 1 hour)\nconst tokenSignResult = basaltToken.sign({}, BasaltTokenExpiry.ONE_DAY);\nconsole.log(tokenSignResult.token);\n</code></pre> node example.jseyJ1dWlkIjoiZTg5YjYzYTAtMjY0NS00ZjQwLWE5YzYtOGM1Yzg0NmIwNzNlIiwiZXhwIjoiMjAyNC0wMy0yM1QxMToxMDoyMC43NjVaIiwiaXNzdWVyIjoiQmFzYWx0LUlzc3VlciIsImF1ZGllbmNlIjoiQmFzYWx0LUF1ZGllbmNlIn0=.e30=.8f72CeURHH/lYENBqozW1PsmVAr3RLHtBm6hbk/TY1VoamD4WYm1TakCdVQhlUVCL3nYRaFzyQ8zhuS5b3vlCg=="},{"location":"fr/basalt-auth/example/authentication.html#signature-dun-token-issuer-et-audience","title":"Signature d'un token Issuer et Audience","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult, BasaltTokenExpiry } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\n// default issuer is 'Basalt-Issuer' and default audience is 'Basalt-Audience'\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign(\n    {}, BasaltTokenExpiry.ONE_HOUR, 'Basalt-issuer', 'Basalt-audience'\n);\nconsole.log(tokenSignResult.token);\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\n// default issuer is 'Basalt-Issuer' and default audience is 'Basalt-Audience'\nconst tokenSignResult = basaltToken.sign(\n    {}, BasaltTokenExpiry.ONE_HOUR, 'Basalt-issuer', 'Basalt-audience'\n);\nconsole.log(tokenSignResult.token);\n</code></pre> node example.jseyJ1dWlkIjoiNzBmYTFiZDEtOWEwNy00Mzk5LWI4Y2YtZTg3ZTNkNDVhNzU2IiwiZXhwIjoiMjAyNC0wMy0yMlQxMjoxMTozOS4zNDZaIiwiaXNzdWVyIjoiQmFzYWx0LWlzc3VlciIsImF1ZGllbmNlIjoiQmFzYWx0LWF1ZGllbmNlIn0=.e30=.3teaXCzVkSLI5+1Hr84le4l9FqqZFjLeHAYGqSDOzK9453tI276ysihygMA5oq8aabYSl4/Fn6Hm5T/p+88ZDQ=="},{"location":"fr/basalt-auth/example/authentication.html#verification-dun-token","title":"V\u00e9rification d'un token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\ntry {\n    basaltToken.verify(tokenSignResult.token, tokenSignResult.publicKey)\n    console.log('Token is valid');\n} catch (error) {\n    console.error(error);\n}\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\ntry {\n    basaltToken.verify(tokenSignResult.token, tokenSignResult.publicKey)\n    console.log('Token is valid');\n} catch (error) {\n    console.error(error);\n}\n</code></pre> node example.jsToken is valid"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-de-luuid-du-token","title":"R\u00e9cup\u00e9ration de l'uuid du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getTokenUuid(tokenSignResult.token));\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getTokenUuid(tokenSignResult.token));\n</code></pre> node example.jsc4a198c4-2717-470d-886f-bc2921badd8f"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-de-lexpiration","title":"Recup\u00e9ration de l'expiration","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getExpirationDate(tokenSignResult.token));\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getExpirationDate(tokenSignResult.token));\n</code></pre> node example.js2024-03-22T12:03:38.266Z"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-de-laudiance-du-token","title":"R\u00e9cup\u00e9ration de l'audiance du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getAudience(tokenSignResult.token));\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getAudience(tokenSignResult.token));\n</code></pre> node example.jsBasalt-Audience"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-de-lemetteur-du-token","title":"R\u00e9cup\u00e9ration de l'\u00e9metteur du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getIssuer(tokenSignResult.token));\n</code></pre> <pre><code>const { BasaltToken, BasaltTokenExpiry } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\nconsole.log(basaltToken.getIssuer(tokenSignResult.token));\n</code></pre> node example.jsBasalt-Issuer"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-du-header-du-token","title":"R\u00e9cup\u00e9ration du header du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult, type IBasaltTokenHeader } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\n\nconst tokenHeader: IBasaltTokenHeader = basaltToken.getHeader(tokenSignResult.token);\nconsole.log(tokenHeader);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\n\nconst tokenHeader = basaltToken.getHeader(tokenSignResult.token);\nconsole.log(tokenHeader);\n</code></pre> node example.js{  uuid: '82e7fa41-44b4-4fa8-ac31-ae309234bb8b',  exp: '2024-03-22T12:19:58.187Z',  issuer: 'Basalt-Audience',  audience: 'Basalt-Audience'}"},{"location":"fr/basalt-auth/example/authentication.html#recuperation-du-payload-du-token","title":"R\u00e9cup\u00e9ration du payload du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({\n    username: 'user1'\n});\nconst tokenPayload: { username: string } = basaltToken.getPayload(tokenSignResult.token);\nconsole.log(tokenPayload);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({\n    username: 'user1'\n});\nconst tokenPayload = basaltToken.getPayload(tokenSignResult.token);\nconsole.log(tokenPayload);\n</code></pre> node example.js{ username: 'user1' }"},{"location":"fr/basalt-auth/example/authentication.html#verifier-si-le-token-a-expire","title":"V\u00e9rifier si le token a expir\u00e9","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, type BasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: BasaltTokenSignResult = basaltToken.sign({});\nconsole.log(basaltToken.isExpired(tokenSignResult.token));\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign({});\nconsole.log(basaltToken.isExpired(tokenSignResult.token));\n</code></pre> node example.jsfalse"},{"location":"fr/basalt-helper/contribution.html","title":"\ud83d\udcda Contribuer \u00e0 Basalt Helper","text":""},{"location":"fr/basalt-helper/contribution.html#introduction","title":"\ud83c\udfd7\ufe0f Introduction","text":"<p>Si vous souhaiter contribuer \u00e0 Basalt Helper, ce serait avec plaisir !</p> <p>Les \u00e9tapes suivantes vous guideront \u00e0 travers le processus de contribution, en vous aidant \u00e0 comprendre comment vous pouvez apporter votre aide au projet.</p>"},{"location":"fr/basalt-helper/contribution.html#installation-de-bun","title":"\ud83d\udee0\ufe0f Installation de Bun","text":"Linux &amp; MacOSWindows <pre><code>curl -fsSL https://bun.sh/install | bash\n</code></pre> <pre><code>powershell -c \"irm bun.sh/install.ps1 | iex\"\n</code></pre> <p>Vous pouvez \u00e9galement consulter le site officiel de Bun.</p>"},{"location":"fr/basalt-helper/contribution.html#processus-de-contribution","title":"\ud83d\udd04 Processus de contribution","text":"<pre><code>gitGraph\n    commit\n    branch develop\n    checkout develop\n    branch feature/id\n    checkout feature/id\n    commit id: \"feat(\ud83d\ude80): add some feature\"\n    commit id: \"test(\ud83e\uddea): add some tests\"\n    checkout develop\n    merge feature/id id:\"Merge branch 'feature/id' into develop\" tag:\"v1.0.0-canary-19971212-ee94487\"\n    checkout main\n    merge develop id:\"Merge branch 'develop' into main\" tag:\"v1.0.0\"</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9 \u00e0 partir de la branche <code>develop</code>.</li> <li>Committez vos changements (<code>git commit -m 'feat: Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.     Veuillez utiliser des conventionnal commits pour vos messages de commit, cela permettra de g\u00e9n\u00e9rer automatiquement les notes de version en plus de permettre l'incr\u00e9mentation automatique de la version.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>develop</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>develop</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>develop</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-helper/contribution.html#notes-supplementaires","title":"\ud83d\udcdd Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible.  </p> <p>Soyez ouvert aux retours et aux suggestions sur votre pull request.</p>"},{"location":"fr/basalt-helper/contribution.html#remerciement","title":"\ud83d\ude4f Remerciement","text":"<p>Je vous remercie sinc\u00e8rement pour votre int\u00e9r\u00eat \u00e0 contribuer \u00e0 Basalt Helper. Votre aide est grandement appr\u00e9ci\u00e9e et contribue \u00e0 l'am\u00e9lioration du projet.</p>"},{"location":"fr/basalt-helper/index.html","title":"Basalt Helper","text":""},{"location":"fr/basalt-helper/index.html#basalt-helper","title":"Basalt Helper","text":"<p>Warning</p> <p>Basalt est mon premier petit projet que je publie. S'il vous pla\u00eet, soyez indulgent et n'h\u00e9sitez pas \u00e0 me faire un retour sur votre exp\u00e9rience : basalt-lab@proton.me ou via Discord <code>necrelox</code>.</p>"},{"location":"fr/basalt-helper/index.html#introduction","title":"\ud83c\udfd7\ufe0f Introduction","text":"<p>Basalt Helper est un package utilitaire sans aucune d\u00e9pendance (\u00e0 partir de la version canary), con\u00e7u pour \u00eatre l\u00e9ger et performant.</p> <p>Il propose plusieurs outils qui se veulent simples d'utilisation et efficaces. Le package continuera d'\u00e9voluer avec de nouvelles fonctionnalit\u00e9s, tout en restant minimaliste et facile \u00e0 adopter pour les d\u00e9veloppeurs.</p>"},{"location":"fr/basalt-helper/index.html#pourquoi-basalt-helper","title":"\u2753 Pourquoi Basalt Helper ?","text":"<p>Le choix de Basalt Helper s'explique par sa l\u00e9g\u00e8ret\u00e9, son absence de d\u00e9pendances et sa simplicit\u00e9 d'int\u00e9gration.</p> <p>Il a \u00e9t\u00e9 pens\u00e9 pour \u00eatre rapide, efficace et facile \u00e0 int\u00e9grer dans n'importe quel projet utilisant Bun.</p>"},{"location":"fr/basalt-helper/index.html#informations-du-package","title":"\ud83d\udce6 Informations du package","text":"<p>Les packages Basalt sont disponibles en deux versions :</p> <ul> <li>Stable : Version par d\u00e9faut, recommand\u00e9e pour la production (<code>@basalt-lab/basalt-helper</code>)</li> <li>Canary : Version de d\u00e9veloppement la plus r\u00e9cente, avec les derni\u00e8res fonctionnalit\u00e9s (<code>@basalt-lab/basalt-helper@canary</code>)</li> </ul> <p>Pour installer une version sp\u00e9cifique, utilisez les tags correspondants lors de l'installation.</p> Version Unpacked Size Minified Gzipped -"},{"location":"fr/basalt-helper/index.html#installation","title":"\u26a1 Installation","text":"<p>Int\u00e9grer Basalt Helper dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-helper</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet :</p> <p>Bun: <pre><code>bun add @basalt-lab/basalt-helper\n</code></pre> Or canary version <pre><code>bun add @basalt-lab/basalt-helper@canary\n</code></pre></p> bun add @basalt-lab/basalt-helperinstalled @basalt-lab/basalt-helper@[version] <p>Vous \u00eates pr\u00eat \u00e0 commencer ! Bon d\u00e9veloppement \ud83d\ude80</p>"},{"location":"fr/basalt-helper/references.html","title":"R\u00e9f\u00e9rences","text":"<p>Vous pouvez retrouver les r\u00e9f\u00e9rences de la librairie ici \u27a1\ufe0f https://basalt-lab.github.io/basalt-helper/.</p>"},{"location":"fr/basalt-helper/example/data/basalt-data.html","title":"Data","text":""},{"location":"fr/basalt-helper/example/data/basalt-data.html#filter-les-cles-par-inclusion","title":"Filter les cl\u00e9s par inclusion","text":"<p><code>filterByKeyInclusion</code> est une fonction permettant de filtrer un objet en incluant uniquement les cl\u00e9s sp\u00e9cifi\u00e9es.</p> Inclure uniquement certaines cl\u00e9s <pre><code>import { filterByKeyInclusion } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n} as const;\n\nconst filteredData = filterByKeyInclusion(data, ['a', 'b', 'c']);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ a: 'a', b: 'b', c: 'c' }</p> Inclure uniquement certaines cl\u00e9s et seulement si elles ont une valeur <pre><code>import { filterByKeyInclusion } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: undefined,\n    c: null,\n    d: 'd',\n} as const;\n\nconst filteredData = filterByKeyInclusion(data, ['a', 'b', 'c'], true);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ a: 'a' }</p>"},{"location":"fr/basalt-helper/example/data/basalt-data.html#filter-les-cles-par-exclusion","title":"Filter les cl\u00e9s par exclusion","text":"<p><code>filterByKeyExclusion</code> est une fonction permettant de filtrer un objet en excluant les cl\u00e9s sp\u00e9cifi\u00e9es.</p> Exclure certaines cl\u00e9s <pre><code>import { filterByKeyExclusion } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n} as const;\n\nconst filteredData = filterByKeyExclusion(data, ['a', 'b']);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ c: 'c', d: 'd' }</p> Exclure certaines cl\u00e9s et exclure ceux qui n'ont pas de valeur <pre><code>import { filterByKeyExclusion } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n} as const;\n\nconst filteredData = filterByKeyExclusion(data, ['a'], true);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ d: 'd' }</p>"},{"location":"fr/basalt-helper/example/data/basalt-data.html#inclure-les-clefs-selon-un-pattern","title":"Inclure les clefs selon un pattern","text":"<p><code>filterByKey</code> est une fonction permettant de filtrer un objet en incluant les clefs selon un pattern.</p> Inclure les clefs selon un pattern <pre><code>import { filterByValue } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n} as const;\n\nconst filteredData = filterByValue(data, (value: string): boolean =&gt; value === 'a' || value === 'b');\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ a: 'a', b: 'b' }</p> Inclure les clefs selon un pattern et seulement si elles ont une valeur <pre><code>import { filterByValue } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: undefined,\n    c: null,\n    d: 'd',\n} as const;\n\nconst filteredData = filterByValue(data, (value: unknown): boolean =&gt; value === 'a', true);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ a: 'a' }</p>"},{"location":"fr/basalt-helper/example/data/basalt-data.html#exclure-les-clefs-selon-un-pattern","title":"Exclure les clefs selon un pattern","text":"<p><code>filterByValue</code> est une fonction permettant de filtrer un objet en excluant les clefs selon un pattern.</p> Exclure les clefs selon un pattern <pre><code>import { filterByValue } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n} as const;\n\nconst filteredData = filterByValue(data, (value: string): boolean =&gt; value !== 'a' &amp;&amp; value !== 'b');\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ c: 'c', d: 'd' }</p> Exclure les clefs selon un pattern et exclure ceux qui n'ont pas de valeur <pre><code>import { filterByValue } from '@basalt-lab/basalt-helper/data';\n\nconst data = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n} as const;\n\nconst filteredData = filterByValue(data, (value: unknown): boolean =&gt; value !== 'a', true);\nconsole.log(filteredData);\n</code></pre> <p>bun example.ts{ d: 'd' }</p>"},{"location":"fr/basalt-helper/example/data/basalt-data.html#transformer-les-cles-dun-objet","title":"Transformer les cl\u00e9s d'un objet","text":"<p><code>transformKeys</code> est une fonction permettant de transformer les cl\u00e9s d'un objet selon un transformateur sp\u00e9cifi\u00e9.</p> Transformation des cl\u00e9s d'un objet en camelCase <pre><code>import { transformKeys } from '@basalt-lab/basalt-helper/data';\nimport { BasaltCamelCaseTransformer } from '@basalt-lab/basalt-helper/data/transformer';\n\nconst data = {\n    'camelCase': undefined,\n    'PascalCase': undefined,\n    'kebab-case': undefined,\n    'snake_case': undefined\n};\n\nconsole.log(transformKeys(data, new BasaltCamelCaseTransformer()));\n</code></pre> <p>bun example.ts{camelCase: undefined,pascalCase: undefined,kebabCase: undefined,snakeCase: undefined}</p> Transformation des cl\u00e9s d'un objet en PascalCase <pre><code>import { transformKeys } from '@basalt-lab/basalt-helper/data';\nimport { BasaltPascalCaseTransformer } from '@basalt-lab/basalt-helper/data/transformer';\n\nconst data = {\n    'camelCase': undefined,\n    'PascalCase': undefined,\n    'kebab-case': undefined,\n    'snake_case': undefined\n};\n\nconsole.log(transformKeys(data, new BasaltPascalCaseTransformer()));\n</code></pre> <p>bun example.ts{CamelCase: undefined,PascalCase: undefined,KebabCase: undefined,SnakeCase: undefined}</p> Transformation des cl\u00e9s d'un objet en kebab-case <pre><code>import { transformKeys } from '@basalt-lab/basalt-helper/data';\nimport { BasaltKebabCaseTransformer } from '@basalt-lab/basalt-helper/data/transformer';\n\nconst data = {\n    'camelCase': undefined,\n    'PascalCase': undefined,\n    'kebab-case': undefined,\n    'snake_case': undefined\n};\n\nconsole.log(transformKeys(data, new BasaltKebabCaseTransformer()));\n</code></pre> <p>bun example.ts{'camel-case': undefined,'pascal-case': undefined,'kebab-case': undefined,'snake-case': undefined}</p> Transformation des cl\u00e9s d'un objet en snake_case <pre><code>import { transformKeys } from '@basalt-lab/basalt-helper/data';\nimport { BasaltSnakeCaseTransformer } from '@basalt-lab/basalt-helper/data/transformer';\n\nconst data = {\n    'camelCase': undefined,\n    'PascalCase': undefined,\n    'kebab-case': undefined,\n    'snake_case': undefined\n};\n\nconsole.log(transformKeys(data, new BasaltSnakeCaseTransformer()));\n</code></pre> <p>bun example.ts{camel_case: undefined,pascal_case: undefined,kebab_case: undefined,snake_case: undefined}</p>"},{"location":"fr/basalt-helper/example/utility/basalt-utility.html","title":"Utility","text":""},{"location":"fr/basalt-helper/example/utility/basalt-utility.html#gestion-des-singletons","title":"Gestion des Singletons","text":"<p><code>SingletonManager</code> est une classe utilitaire qui permet d'enregistrer, de r\u00e9cup\u00e9rer et de d\u00e9senregistrer des singletons.</p> Enregistrement, R\u00e9cup\u00e9ration et D\u00e9senregistrement (sans arguments) <pre><code>import { SingletonManager } from '@basalt-lab/basalt-helper/util';\n\n// Example class with a static counter allow to see the number of instances created of this class\nclass Example {\n    private static _count = 0;\n    private readonly _id: number;\n\n    public constructor() {\n        Example._count += 1;\n        this._id = Example._count;\n        console.log(`Example created with ID: ${this._id}`);\n    }\n\n    public sayHello(): void {\n        console.log(`Hello from instance ${this._id}!`);\n    }\n}\n\n// allows to register the class Example as a singleton\nSingletonManager.register('Example', Example);\n\n// Get the singleton instance of Example\nSingletonManager.get&lt;Example&gt;('Example').sayHello();\nSingletonManager.get&lt;Example&gt;('Example').sayHello();\n\n// allows to unregister the class Example as a singleton\nSingletonManager.unregister('Example');\n</code></pre> <p>node example.jsExampleSingleton created with ID: 1Hello from instance 1!Hello from instance 1!</p> Enregistrement, R\u00e9cup\u00e9ration et D\u00e9senregistrement (avec des arguments) <pre><code>import { SingletonManager } from '@basalt-lab/basalt-helper/util';\n\n// Example class with a static counter allow to see the number of instances created of this class\nclass Example {\n    private static _count = 0;\n    private readonly _id: number;\n\n    public constructor(name: string) {\n        Example._count += 1;\n        this._id = Example._count;\n        console.log(`Example created with ID: ${this._id} and name: ${name}`);\n    }\n\n    public sayHello(): void {\n        console.log(`Hello from instance ${this._id}!`);\n    }\n}\n\n// allows to register the class Example as a singleton\nSingletonManager.register('Example', Example, 'John Doe');\n\n// Get the singleton instance of Example\nSingletonManager.get&lt;Example&gt;('Example').sayHello();\nSingletonManager.get&lt;Example&gt;('Example').sayHello();\n\n// allows to unregister the class Example as a singleton\nSingletonManager.unregister('Example');\n</code></pre> <p>node example.jsExampleSingleton created with ID: 1 and name: John DoeHello from instance 1!Hello from instance 1!</p>"},{"location":"fr/basalt-logger/contribution.html","title":"\ud83d\udcda Contribuer \u00e0 Basalt Logger","text":""},{"location":"fr/basalt-logger/contribution.html#introduction","title":"\ud83c\udfd7\ufe0f Introduction","text":"<p>Si vous souhaiter contribuer \u00e0 Basalt Logger, ce serait avec plaisir !</p> <p>Les \u00e9tapes suivantes vous guideront \u00e0 travers le processus de contribution, en vous aidant \u00e0 comprendre comment vous pouvez apporter votre aide au projet.</p>"},{"location":"fr/basalt-logger/contribution.html#installation-de-bun","title":"\ud83d\udee0\ufe0f Installation de Bun","text":"Linux &amp; MacOSWindows <pre><code>curl -fsSL https://bun.sh/install | bash\n</code></pre> <pre><code>powershell -c \"irm bun.sh/install.ps1 | iex\"\n</code></pre> <p>Vous pouvez \u00e9galement consulter le site officiel de Bun.</p>"},{"location":"fr/basalt-logger/contribution.html#processus-de-contribution","title":"\ud83d\udd04 Processus de contribution","text":"<pre><code>gitGraph\n    commit\n    branch develop\n    checkout develop\n    branch feature/id\n    checkout feature/id\n    commit id: \"feat(\ud83d\ude80): add some feature\"\n    commit id: \"test(\ud83e\uddea): add some tests\"\n    checkout develop\n    merge feature/id id:\"Merge branch 'feature/id' into develop\" tag:\"v1.0.0-canary-19971212-ee94487\"\n    checkout main\n    merge develop id:\"Merge branch 'develop' into main\" tag:\"v1.0.0\"</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9 \u00e0 partir de la branche <code>develop</code>.</li> <li>Committez vos changements (<code>git commit -m 'feat: Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.     Veuillez utiliser des conventionnal commits pour vos messages de commit, cela permettra de g\u00e9n\u00e9rer automatiquement les notes de version en plus de permettre l'incr\u00e9mentation automatique de la version.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>develop</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>develop</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>develop</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>develop</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-logger/contribution.html#notes-supplementaires","title":"\ud83d\udcdd Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible.  </p> <p>Soyez ouvert aux retours et aux suggestions sur votre pull request.</p>"},{"location":"fr/basalt-logger/contribution.html#remerciement","title":"\ud83d\ude4f Remerciement","text":"<p>Je vous remercie sinc\u00e8rement pour votre int\u00e9r\u00eat \u00e0 contribuer \u00e0 Basalt Logger. Votre aide est grandement appr\u00e9ci\u00e9e et contribue \u00e0 l'am\u00e9lioration du projet.</p>"},{"location":"fr/basalt-logger/index.html","title":"Basalt Logger","text":""},{"location":"fr/basalt-logger/index.html#basalt-logger","title":"Basalt Logger","text":"<p>Warning</p> <p>Basalt est mon premier petit projet que je publie. S'il vous pla\u00eet, soyez indulgent et n'h\u00e9sitez pas \u00e0 me faire un retour sur votre exp\u00e9rience : basalt-lab@proton.me ou via Discord <code>necrelox</code>.</p>"},{"location":"fr/basalt-logger/index.html#introduction","title":"\ud83c\udfd7\ufe0f Introduction","text":"<p>Basalt Logger est un package de logging flexible et non bloquant. Il offre la possibilit\u00e9 d'impl\u00e9menter plusieurs strat\u00e9gies de redirection des logs et permet de s\u00e9lectionner une ou plusieurs strat\u00e9gies selon vos besoins.</p> <p>Basalt Logger s'adapte parfaitement \u00e0 tout projet n\u00e9cessitant une journalisation d\u00e9taill\u00e9e, personnalisable et performante. Sa conception modulaire en fait un outil id\u00e9al pour g\u00e9rer efficacement les logs de votre application.</p>"},{"location":"fr/basalt-logger/index.html#pourquoi-basalt-logger","title":"\u2753 Pourquoi Basalt Logger ?","text":"<p>Le choix de Basalt Logger repose sur plusieurs avantages cl\u00e9s :</p> <ul> <li>Performance et L\u00e9g\u00e8ret\u00e9 : Z\u00e9ro d\u00e9pendance externe et une empreinte m\u00e9moire minimale</li> <li>Simplicit\u00e9 : API intuitive et documentation claire pour une prise en main rapide</li> <li>Flexibilit\u00e9 : Architecture modulaire permettant l'ajout de strat\u00e9gies de logging personnalis\u00e9es</li> <li>Non-Bloquant : Con\u00e7u pour ne pas impacter les performances de votre application</li> <li>Polyvalence : S'adapte \u00e0 tous les environnements (console, fichiers, services externes)</li> <li>Extensibilit\u00e9 : Cr\u00e9ez vos propres strat\u00e9gies de logging selon vos besoins sp\u00e9cifiques</li> </ul>"},{"location":"fr/basalt-logger/index.html#informations-du-package","title":"\ud83d\udce6 Informations du package","text":"<p>Les packages Basalt sont disponibles en deux versions :</p> <ul> <li>Stable : Version par d\u00e9faut, recommand\u00e9e pour la production (<code>@basalt-lab/basalt-logger</code>)</li> <li>Canary : Version de d\u00e9veloppement la plus r\u00e9cente, avec les derni\u00e8res fonctionnalit\u00e9s (<code>@basalt-lab/basalt-logger@canary</code>)</li> </ul> <p>Pour installer une version sp\u00e9cifique, utilisez les tags correspondants lors de l'installation.</p> Version Unpacked Size Minified Gzipped -"},{"location":"fr/basalt-logger/index.html#installation","title":"\u26a1 Installation","text":"<p>Int\u00e9grer Basalt Logger dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-logger</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet :</p> <p>Bun: <pre><code>bun add @basalt-lab/basalt-logger\n</code></pre> Or canary version <pre><code>bun add @basalt-lab/basalt-logger@canary\n</code></pre></p> bun add @basalt-lab/basalt-loggerinstalled @basalt-lab/basalt-logger@[version] <p>Vous \u00eates pr\u00eat \u00e0 commencer ! Bon d\u00e9veloppement \ud83d\ude80</p>"},{"location":"fr/basalt-logger/references.html","title":"R\u00e9f\u00e9rences","text":"<p>Vous pouvez retrouver les r\u00e9f\u00e9rences de la librairie ici \u27a1\ufe0f https://basalt-lab.github.io/basalt-logger/.</p>"},{"location":"fr/basalt-logger/example/logger.html","title":"Logger","text":""},{"location":"fr/basalt-logger/example/logger.html#basaltlogger","title":"BasaltLogger","text":"<p><code>BasaltLogger</code> est une classe qui vous permettra d'enregistrer des strat\u00e9gies de log pour votre application ainsi de loguer des messages.</p> Ajout d'une strategie de log <pre><code>import { BasaltLogger, ConsoleLoggerStrategy } from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategy('console', new ConsoleLoggerStrategy());\n\nlogger.log('hello world');\n</code></pre> <p>node example.js[2023-11-21 00:00:00] LOG : hello world</p> Suppression d'une strategie specifique de log <pre><code>import { BasaltLogger, ConsoleLoggerStrategy } from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategy('console', new ConsoleLoggerStrategy());\n\nlogger.unregisterStrategy('console');\n</code></pre> <p>node example.js</p> Suppression de toutes les strategies de log <pre><code>import { BasaltLogger, ConsoleLoggerStrategy } from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategy('console', new ConsoleLoggerStrategy());\n\nlogger.clearStrategies();\n</code></pre> <p>node example.js</p> Cr\u00e9ation d'une strategie de log <pre><code>import { appendFile } from 'fs/promises';\nimport { BasaltLogger, LoggerStrategy, LogLevels}  from '@basalt-lab/basalt-logger';\n\nclass FileLoggerStrategy implements LoggerStrategy {\n        public log(level: LogLevels, date: Date, object: unknown): void {\n        const prefixDate = `[${date.toISOString().replace(/T/, ' ').replace(/\\..+/, '')}]`;\n        const sanitizedObject: string = typeof object === 'string' ? object : JSON.stringify(object);\n        const message = `${prefixDate} ${level} : ${sanitizedObject}`;\n        await appendFile(this._path, `${message}\\n`);\n    }\n}\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategy('file', new FileLoggerStrategy());\nlogger.log('Hello World');\n</code></pre> <p>node example.jscat test.log[2023-11-21 00:00:00] LOG : Hello World</p> Ajout de plusieurs strategies de log <pre><code>import { BasaltLogger, ConsoleLoggerStrategy, FileLoggerStrategy}  from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategies([\n    ['console', new ConsoleLoggerStrategy()],\n    ['file', new FileLoggerStrategy('log.txt')]\n]);\n\nlogger.log('Hello World');\n</code></pre> <p>node example.js[2023-11-21 00:00:00] LOG : Hello Worldcat log.txt[2023-11-21 00:00:00] LOG : Hello World</p> Tout les niveaux de log <pre><code>import { BasaltLogger, ConsoleLoggerStrategy }  from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategy('console', new ConsoleLoggerStrategy());\n\nlogger.log('hello world');\nlogger.info('hello world');\nlogger.debug('hello world');\nlogger.warn('hello world');\nlogger.error('hello world');\n</code></pre> <p>node example.js[2023-11-21 00:00:00] LOG : hello world[2023-11-21 00:00:00] INFO : hello world[2023-11-21 00:00:00] DEBUG : hello world[2023-11-21 00:00:00] WARN : hello world[2023-11-21 00:00:00] ERROR : hello world</p> Log sur une strategie specifique <pre><code>import { BasaltLogger, ConsoleLoggerStrategy, FileLoggerStrategy}  from '@basalt-lab/basalt-logger';\n\nconst logger = new BasaltLogger();\n\nlogger.registerStrategies([\n    ['console', new ConsoleLoggerStrategy()],\n    ['file', new FileLoggerStrategy('log.txt')]\n]);\n\nlogger.log('console strategy', ['console']);\nlogger.log('file strategy', ['file']);\nlogger.log('console and file strategy', ['console', 'file']);\nlogger.log('all strategies');\n</code></pre> <p>node example.js[2023-11-21 00:00:00] LOG : console strategy[2023-11-21 00:00:00] LOG : console and file strategy[2023-11-21 00:00:00] LOG : all strategiescat log.txt[2023-11-21 00:00:00] LOG : file strategy[2023-11-21 00:00:00 LOG : console and file strategy[2023-11-21 00:00:00 LOG : all strategies</p>"}]}
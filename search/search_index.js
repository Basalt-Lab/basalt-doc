var __index = {"config":{"lang":["en","fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"fr/index.html","title":"Basalt","text":""},{"location":"fr/index.html#introduction","title":"Introduction","text":"<p>Bienvenue dans la documentation de Basalt.</p> <p>Basalt est une suite int\u00e9gr\u00e9e de packages sp\u00e9cialement con\u00e7ue pour le d\u00e9veloppement de backends en Node.js. \u00c9labor\u00e9 en TypeScript, chaque module de Basalt a pour objectif de fournir des outils essentiels et efficaces qui simplifient la cr\u00e9ation de syst\u00e8mes backend robustes et performants.</p> Attention <p>Bien que Basalt soit fonctionnel, il est important de noter que tous les packages ne sont pas encore disponibles. Actuellement, seuls certains modules de base sont op\u00e9rationnels.</p> <p>La documentation et les fonctionnalit\u00e9s vont continuer \u00e0 se d\u00e9velopper au fur et \u00e0 mesure de la progression du projet. Comme c'est un projet en \u00e9volution, il peut ne pas offrir la m\u00eame maturit\u00e9 ou la m\u00eame \u00e9tendue de fonctionnalit\u00e9s que d'autres solutions bien \u00e9tablies.</p> <p>Nous travaillons sans rel\u00e2che pour enrichir Basalt et le rendre plus complet. En attendant, nous recommandons son utilisation pour des projets exp\u00e9rimentaux ou non critiques. Si votre projet n\u00e9cessite une solution plus compl\u00e8te et \u00e9prouv\u00e9e, nous vous sugg\u00e9rons d'envisager des alternatives telles que Adonis.</p> <p>Vos retours, rapports de bugs, et suggestions sont essentiels pour acc\u00e9l\u00e9rer le d\u00e9veloppement de Basalt. Nous appr\u00e9cions votre soutien et votre compr\u00e9hension.</p>"},{"location":"fr/index.html#commencer-avec-basalt","title":"Commencer avec Basalt","text":"<p>La suite de packages Basalt est con\u00e7ue pour une int\u00e9gration et une compatibilit\u00e9 sans faille. Chaque module peut \u00eatre install\u00e9 s\u00e9par\u00e9ment via NPM, vous permettant de construire et d'\u00e9tendre votre backend avec les fonctionnalit\u00e9s dont vous avez besoin.</p> <p>Une documentation d\u00e9taill\u00e9e pour chaque package est disponible pour vous guider \u00e0 travers les processus d'int\u00e9gration et d'utilisation, assurant une exp\u00e9rience de d\u00e9veloppement fluide et efficace.</p> <p>Avec Basalt, vous acc\u00e9dez \u00e0 un \u00e9cosyst\u00e8me d'outils con\u00e7us pour rendre le d\u00e9veloppement backend plus structur\u00e9, s\u00e9curis\u00e9 et efficace.</p>"},{"location":"fr/index.html#contribution-et-soutien","title":"Contribution et Soutien","text":"<p>En tant que projet open-source, nous prosp\u00e9rons gr\u00e2ce au soutien et \u00e0 la contribution de la communaut\u00e9. Nous encourageons nos utilisateurs \u00e0 contribuer \u00e0 Basalt, que ce soit en signalant des bugs, en sugg\u00e9rant des am\u00e9liorations ou en proposant de nouvelles fonctionnalit\u00e9s.</p> <p>En faisant partie de la croissance de Basalt, vous aidez non seulement \u00e0 am\u00e9liorer le projet, mais vous devenez \u00e9galement un membre essentiel d'une communaut\u00e9 qui favorise l'innovation, l'apprentissage et la collaboration.</p> <p>Veuillez consulter nos directives de contribution pour plus d'informations sur la fa\u00e7on de participer.</p>"},{"location":"fr/index.html#conclusion","title":"Conclusion","text":"<p>Nous vous remercions d'explorer Basalt et de le consid\u00e9rer comme la base de vos solutions backend. Alors que nous sommes en pleine croissance et am\u00e9lioration, votre confiance et votre patience envers nos outils sont grandement appr\u00e9ci\u00e9es.</p> <p>Bon codage, et nous sommes impatients de voir ce que vous allez cr\u00e9er avec Basalt !</p> <p>Warning</p> <p>Si vous voyez des erreurs, j'en suis vraiment d\u00e9sol\u00e9 je fais de mon mieux c'est la premi\u00e8re fois que je fais \u00e7a. N'h\u00e9sitez pas si vous souhait\u00e9 discuter ou participer \u00e0 ce projet, je suis ouvert \u00e0 toute proposition.</p>"},{"location":"fr/basalt-auth/changelog.html","title":"Changelog","text":""},{"location":"fr/basalt-auth/changelog.html#103-2023-11-15","title":"1.0.3 (2023-11-15)","text":""},{"location":"fr/basalt-auth/changelog.html#code-refactoring","title":"Code Refactoring","text":"<ul> <li>clean and remove basalt-core (d110917)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#build-system","title":"Build System","text":"<ul> <li>update dependancies and change node version (3475779)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#continuous-integration","title":"Continuous Integration","text":"<ul> <li>update release-and-publish github action (55e6ed4)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#documentation","title":"Documentation","text":"<ul> <li>Add readme (c16e8f9)</li> <li>update JSDoc (020f6cf)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#miscellaneous-chores","title":"Miscellaneous Chores","text":"<ul> <li>Add keywords (74a9ed5)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#102-2023-10-13","title":"1.0.2 (2023-10-13)","text":""},{"location":"fr/basalt-auth/changelog.html#bug-fixes","title":"Bug Fixes","text":"<ul> <li>release.. (2201287)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#101-2023-10-13","title":"1.0.1 (2023-10-13)","text":""},{"location":"fr/basalt-auth/changelog.html#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>change classes and interfaces name (fc340f6)</li> </ul>"},{"location":"fr/basalt-auth/changelog.html#100-2023-10-13","title":"1.0.0 (2023-10-13)","text":""},{"location":"fr/basalt-auth/changelog.html#features","title":"Features","text":"<ul> <li>add few classes and interfaces (BasaltToken, KeyGenerator) (9a8c3b9)</li> <li>Initialising the project (b34c19e)</li> </ul>"},{"location":"fr/basalt-auth/contribution.html","title":"Contribuer \u00e0 Basalt Auth","text":""},{"location":"fr/basalt-auth/contribution.html#introduction","title":"Introduction","text":"<p>Les contributions sont ce qui fait de la communaut\u00e9 open source un endroit incroyable pour apprendre, s'inspirer, et cr\u00e9er. Toute contribution que vous apportez est grandement appr\u00e9ci\u00e9e.</p> <p>Que vous aidiez \u00e0 corriger des bugs, \u00e0 proposer de nouvelles fonctionnalit\u00e9s, \u00e0 mettre \u00e0 jour la documentation ou \u00e0 am\u00e9liorer les styles de code, vous aidez \u00e0 rendre notre projet plus puissant et b\u00e9n\u00e9fique pour la communaut\u00e9.</p> <p>Suivez les \u00e9tapes ci-dessous pour contribuer.</p>"},{"location":"fr/basalt-auth/contribution.html#processus-de-contribution","title":"Processus de contribution","text":"<pre><code>gitGraph:\noptions\n{\n    \"nodeSpacing\": 150,\n    \"nodeRadius\": 10\n}\nend\ncommit\nbranch stage\ncheckout stage\ncommit\nbranch feature\ncheckout feature\ncommit\ncommit\ncheckout stage\nmerge feature\ncheckout main\nmerge stage</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9.</li> <li>Committez vos changements (<code>git commit -m 'Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>stage</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>stage</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>stage</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-auth/contribution.html#notes-supplementaires","title":"Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible. Les projets avec une suite de tests compl\u00e8te comptent sur les contributions pour maintenir la couverture des tests.</p> <p>Consultez les directives de style de code et les guides de contribution sp\u00e9cifiques au projet (s'ils existent) pour vous assurer que votre contribution est en ligne avec les attentes du projet.</p> <p>N'oubliez pas de mettre \u00e0 jour la documentation si n\u00e9cessaire pour refl\u00e9ter vos changements, en particulier si vous ajoutez ou modifiez des fonctionnalit\u00e9s.</p> <p>Soyez ouvert aux commentaires et activement engag\u00e9 dans la discussion sur votre pull request si les membres de la communaut\u00e9 ou les mainteneurs ont des questions ou des pr\u00e9occupations.</p>"},{"location":"fr/basalt-auth/contribution.html#conclusion","title":"Conclusion","text":"<p>Votre temps et vos comp\u00e9tences peuvent grandement b\u00e9n\u00e9ficier au projet et \u00e0 la communaut\u00e9 dans son ensemble.</p> <p>Nous sommes impatients de voir vos contributions et sommes pr\u00eats \u00e0 collaborer pour int\u00e9grer de nouvelles id\u00e9es ou am\u00e9liorations.</p> <p>Merci de contribuer \u00e0 rendre Basalt Auth encore meilleur !</p>"},{"location":"fr/basalt-auth/index.html","title":"Basalt Auth","text":"<p>Warning</p> <p>Basalt est actuellement \u00e0 ses d\u00e9buts, s'il vous pla\u00eet soyez indulgent et h\u00e9sitez pas \u00e0 nous faire part de vos commentaires et suggestions.</p>"},{"location":"fr/basalt-auth/index.html#introduction","title":"Introduction","text":"<p>Basalt Auth fait partie de l'\u00e9cosyst\u00e8me Basalt, offrant une m\u00e9thode pratique pour g\u00e9rer l'authentification via des tokens.</p> <p>Au c\u0153ur de ce module se trouve la classe BasaltToken, dont la fonction principale est la g\u00e9n\u00e9ration et la v\u00e9rification des tokens.</p> <p>La particularit\u00e9 de Basalt Auth r\u00e9side dans son syst\u00e8me de paire de cl\u00e9s : chaque token est associ\u00e9 \u00e0 sa propre paire, une caract\u00e9ristique qui le diff\u00e9rencie des JWT standards.</p>"},{"location":"fr/basalt-auth/index.html#pourquoi-basalt-auth","title":"Pourquoi Basalt Auth ?","text":"<p>L'objectif derri\u00e8re Basalt Auth \u00e9tait de d\u00e9velopper un syst\u00e8me d'authentification personnalis\u00e9 qui s'inspire de la structure des JWT, mais avec une touche distinctive: chaque token dispose de sa propre paire de cl\u00e9s.</p> <p>Cette approche n'est pas n\u00e9cessairement sup\u00e9rieure aux m\u00e9thodes conventionnelles; c'est plut\u00f4t une exploration personnelle dans la conception de syst\u00e8mes d'authentification.</p> <p>Il est important de noter que la s\u00e9curit\u00e9 est une discipline \u00e9volutive, et les m\u00e9rites de cette structure par rapport aux standards \u00e9tablis n'ont pas \u00e9t\u00e9 pleinement \u00e9valu\u00e9s.</p> <p>Warning</p> <p>Basalt Auth ne cherche pas \u00e0 remplacer les solutions existantes, mais plut\u00f4t \u00e0 offrir une alternative pour des cas d'utilisation sp\u00e9cifiques.</p>"},{"location":"fr/basalt-auth/index.html#caracteristiques-principales","title":"Caract\u00e9ristiques Principales","text":"<p>Au-del\u00e0 de sa m\u00e9thode de gestion des tokens, Basalt Auth est assez simple, avec quelques fonctionnalit\u00e9s cl\u00e9s :</p> <ul> <li>Paires de cl\u00e9s uniques par token : Cette caract\u00e9ristique peut offrir des aspects int\u00e9ressants en termes de gestion des sessions.</li> <li>Processus de g\u00e9n\u00e9ration et de v\u00e9rification : Ces fonctions suivent une logique simplifi\u00e9e, rendant leur utilisation assez directe.</li> </ul> <p>Il n'est pas question de pr\u00e9tendre rivaliser ou remplacer les solutions existantes, mais plut\u00f4t de proposer une alternative pour des sc\u00e9narios sp\u00e9cifiques.</p>"},{"location":"fr/basalt-auth/index.html#polyvalence-et-compatibilite","title":"Polyvalence et Compatibilit\u00e9","text":"<p>Basalt Auth est con\u00e7u pour \u00eatre utilis\u00e9 dans des contextes vari\u00e9s, que ce soit backend ou frontend. Sa nature ind\u00e9pendante facilite son incorporation dans diff\u00e9rents projets, sans n\u00e9cessiter de composants externes sp\u00e9cifiques.</p>"},{"location":"fr/basalt-auth/index.html#conclusion","title":"Conclusion","text":"<p>Basalt Auth propose une approche diff\u00e9rente de l'authentification tokenis\u00e9e. Sans chercher \u00e0 r\u00e9volutionner le domaine, ce module offre des fonctionnalit\u00e9s suppl\u00e9mentaires qui pourraient \u00eatre d'int\u00e9r\u00eat pour des cas d'utilisation sp\u00e9cifiques.</p> <p>Son parcours sera dict\u00e9 par les retours d'exp\u00e9rience et les besoins \u00e9mergents, et il reste un outil \u00e0 consid\u00e9rer pour des projets recherchant une m\u00e9thode d'authentification l\u00e9g\u00e8rement diff\u00e9rente de la norme.</p>"},{"location":"fr/basalt-auth/license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Basalt</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"fr/basalt-auth/getting-started/index.html","title":"Getting Started","text":""},{"location":"fr/basalt-auth/getting-started/index.html#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Bienvenue dans le guide de d\u00e9marrage rapide de Basalt Auth !</p> <p>En quelques minutes, vous allez apprendre \u00e0 int\u00e9grer et \u00e0 utiliser les fonctionnalit\u00e9s de Basalt Auth dans votre projet.</p>"},{"location":"fr/basalt-auth/getting-started/index.html#prerequis","title":"Pr\u00e9requis","text":"<p>Pour utiliser Basalt Auth, vous devez avoir install\u00e9 Node.js et npm.</p> <p>Vous pouvez utiliser des gestionnaires de versions comme nvm</p> <p>Pour v\u00e9rifier que vous avez bien install\u00e9 Node.js et npm, ouvrez un terminal et tapez les commandes suivantes :</p> <p><pre><code>node -v\n</code></pre> <pre><code>npm -v\n</code></pre></p> node -vv20.9.0npm -v10.2.0"},{"location":"fr/basalt-auth/getting-started/index.html#installation","title":"Installation","text":"TypeScript <p>Basalt Auth est \u00e9crit en TypeScript et est livr\u00e9 avec des types TypeScript int\u00e9gr\u00e9s.</p> <p>Si vous utilisez TypeScript, vous n'avez pas besoin d'installer de types suppl\u00e9mentaires.</p> <p>Si vous utilisez JavaScript, vous pouvez ignorer les types TypeScript.</p> <p>Int\u00e9grer Basalt Auth dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-auth</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet :</p> <pre><code>npm i @basalt-lab/basalt-auth\n</code></pre> npm i @basalt-lab/basalt-authadded 1 package, and audited 1 package in 1sfound 0 vulnerabilities"},{"location":"fr/basalt-auth/getting-started/example/token.html","title":"Token","text":""},{"location":"fr/basalt-auth/getting-started/example/token.html#signature-dun-token","title":"Signature d'un token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconsole.log(tokenSignResult.token);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconsole.log(tokenSignResult.token);\n</code></pre> node example.jseyJ1dWlkIjoiY2FhNWNlYzMtMGY5Ni00Y2E5LWJhMmEtM2JiZGE3OGRkMGExIiwiZXhwIjoiMjAyMy0xMC0zMVQxOTo0MDoxMy42NjRaIiwiaXNzdWVyIjoiWW91ckFwcE5hbWUtSXNzdWVyIiwiYXVkaWVuY2UiOiJZb3VyQXBwTmFtZS1BdWRpZW5jZSJ9.eyJ1c2VybmFtZSI6ImJhc2FsdCJ9.fT7a0dC4lHreUF/YsqOHgXuJo4toEMr8jmrWZhSa0LbHxwLTJj5k7mSxCmSLv9LWUg54Pmj7prRtgMPnFqAYDg=="},{"location":"fr/basalt-auth/getting-started/example/token.html#verification-dun-token","title":"V\u00e9rification d'un token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\ntry {\n    basaltToken.verify(tokenSignResult.token, tokenSignResult.publicKey);\n    console.log('Token is valid');\n} catch (e) {\n    console.log(e);\n}\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\ntry {\n    basaltToken.verify(tokenSignResult.token, tokenSignResult.publicKey);\n    console.log('Token is valid');\n} catch (e) {\n    console.log(e);\n}\n</code></pre> node example.jsToken is valid"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-de-luuid-du-token","title":"R\u00e9cup\u00e9ration de l'uuid du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst tokenUuid: string = basaltToken.getTokenUuid(token);\nconsole.log(tokenUuid);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst tokenUuid = basaltToken.getTokenUuid(token);\nconsole.log(tokenUuid);\n</code></pre> node example.js98926cf6-4eda-4b67-bb46-ba58329ca0b5"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-de-la-date-du-token","title":"Recup\u00e9ration de la date du token","text":"TypeScriptJavaScript <pre><code>```typescript\nimport { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst tokenDate: Date = basaltToken.getExpirationDate(token);\nconsole.log(tokenDate);\n```\n</code></pre> <pre><code>```javascript\nconst { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst tokenDate = basaltToken.getExpirationDate(token);\nconsole.log(tokenDate);\n```\n</code></pre> node example.js2023-10-31T20:01:26.251Z"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-de-laudiance-du-token","title":"R\u00e9cup\u00e9ration de l'audiance du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst audiance: string = basaltToken.getAudience(token);\nconsole.log(audiance);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst audiance = basaltToken.getAudience(token);\nconsole.log(audiance);\n</code></pre> node example.jsYourAppName-Audience"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-de-lemetteur-du-token","title":"R\u00e9cup\u00e9ration de l'\u00e9metteur du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst issuer: string = basaltToken.getIssuer(token);\nconsole.log(issuer);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst issuer = basaltToken.getIssuer(token);\nconsole.log(issuer);\n</code></pre> node example.jsYourAppName-Issuer"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-du-header-du-token","title":"R\u00e9cup\u00e9ration du header du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult, IBasaltTokenHeader } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst header: IBasaltTokenHeader = basaltToken.getHeader(token);\nconsole.log(header);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst header = basaltToken.getHeader(token);\nconsole.log(header);\n</code></pre> node example.js{  uuid: '36abcb22-05d4-417a-a8c2-8d17b8dc631e',  exp: '2023-10-31T20:25:34.429Z',  issuer: 'YourAppName-Issuer',  audience: 'YourAppName-Audience'}"},{"location":"fr/basalt-auth/getting-started/example/token.html#recuperation-du-payload-du-token","title":"R\u00e9cup\u00e9ration du payload du token","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconst payload: {\n    username: string;\n} = basaltToken.getPayload(token);\nconsole.log(payload);\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconst payload = basaltToken.getPayload(token);\nconsole.log(payload);\n</code></pre> node example.js{ username: 'basalt' }"},{"location":"fr/basalt-auth/getting-started/example/token.html#verifier-si-le-token-a-expire","title":"V\u00e9rifier si le token a expir\u00e9","text":"TypeScriptJavaScript <pre><code>import { BasaltToken, IBasaltTokenSignResult } from '@basalt-lab/basalt-auth';\n\nconst basaltToken: BasaltToken = new BasaltToken();\nconst tokenSignResult: IBasaltTokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token: string = tokenSignResult.token;\nconsole.log(basaltToken.isExpired(token));\n</code></pre> <pre><code>const { BasaltToken } = require('@basalt-lab/basalt-auth');\n\nconst basaltToken = new BasaltToken();\nconst tokenSignResult = basaltToken.sign(\n    1000 * 60 * 60 * 24, // 1 day\n    {\n        username: 'basalt',\n    }\n);\nconst token = tokenSignResult.token;\nconsole.log(basaltToken.isExpired(token));\n</code></pre> node example.jsfalse"},{"location":"fr/basalt-auth/reference/token.html","title":"Token","text":""},{"location":"fr/basalt-auth/reference/token.html#class-reference-for-token","title":"Class Reference for Token","text":"<p><code>BasaltToken</code> is a utility class designed for token management, including token generation, verification, and utility methods to get information from the token.</p>"},{"location":"fr/basalt-auth/reference/token.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltToken {\n        -structureIsValid(token: string): boolean\n        -buildHeader(tokenUUid: string, expirationMs: number, issuer: string, audience: string): string\n        -buildPayload~T extends object~(payload: T): string\n        -buildSignature(header: string, payload: string, privateKey: string, passphrase: string): string\n        +getTokenUuid(token: string): string\n        +getExpirationDate(token: string): Date\n        +getAudience(token: string): string\n        +getIssuer(token: string): string\n        +getHeader(token: string): IBasaltTokenHeader\n        +getPayload&lt;T extends object&gt;(token: string): T\n        +isExpired(token: string): boolean\n        +sign&lt;T extends object&gt;(expirationMs: number, payload: T, issuer: string, audience: string, keyPair: IBasaltKeyPairED25519): IBasaltTokenSignResult\n        +verify(token: string, publicKey: string): void\n    }\n</code></pre>"},{"location":"fr/basalt-auth/reference/token.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-auth/reference/token.html#gettokenuuid","title":"<code>getTokenUuid</code>","text":"getTokenUuid <ul> <li>Description: R\u00e9cup\u00e8re l'UUID \u00e0 partir du token.</li> <li>Signature: <code>public getTokenUuid(token: string): string</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 partir duquel extraire l'UUID.</li> </ul> </li> <li>Retourne: L'UUID du token sous forme de cha\u00eene de caract\u00e8res.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#getexpirationdate","title":"<code>getExpirationDate</code>","text":"getExpirationDate <ul> <li>Description: Obtient la date d'expiration du token.</li> <li>Signature: <code>public getExpirationDate(token: string): Date</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 v\u00e9rifier.</li> </ul> </li> <li>Retourne: La date d'expiration du token.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#getaudience","title":"<code>getAudience</code>","text":"getAudience <ul> <li>Description: R\u00e9cup\u00e8re le public destinataire \u00e0 partir du token.</li> <li>Signature: <code>public getAudience(token: string): string</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 partir duquel extraire le public destinataire.</li> </ul> </li> <li>Retourne: Le public destinataire du token sous forme de cha\u00eene de caract\u00e8res.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#getissuer","title":"<code>getIssuer</code>","text":"getIssuer <ul> <li>Description: R\u00e9cup\u00e8re l'\u00e9metteur \u00e0 partir du token.</li> <li>Signature: <code>public getIssuer(token: string): string</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 partir duquel extraire l'\u00e9metteur.</li> </ul> </li> <li>Retourne: L'\u00e9metteur du token sous forme de cha\u00eene de caract\u00e8res.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#getheader","title":"<code>getHeader</code>","text":"getHeader <ul> <li>Description: Obtient l'en-t\u00eate du token.</li> <li>Signature: <code>public getHeader(token: string): IBasaltTokenHeader</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 v\u00e9rifier.</li> </ul> </li> <li>Retourne: L'en-t\u00eate du token.</li> <li>Exceptions: Lance une erreur si la structure du token est invalide.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#getpayload","title":"<code>getPayload</code>","text":"getPayload <ul> <li>Description: Obtient la charge utile du token.</li> <li>Signature: <code>public getPayload&lt;T extends object&gt;(token: string): T</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 v\u00e9rifier.</li> </ul> </li> <li>Retourne: La charge utile du token.</li> <li>Exceptions: Lance une erreur si la structure du token est invalide.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#isexpired","title":"<code>isExpired</code>","text":"isExpired <ul> <li>Description: V\u00e9rifie si le token est expir\u00e9.</li> <li>Signature: <code>public isExpired(token: string): boolean</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 v\u00e9rifier.</li> </ul> </li> <li>Retourne: <code>true</code> si le token est expir\u00e9, sinon <code>false</code>.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#sign","title":"<code>sign</code>","text":"sign <ul> <li>Description: Signe un token.</li> <li>Signature: <code>public signer&lt;T extends object&gt;(expirationMs: number, payload: T, issuer: string = 'VotreNomApp-\u00c9metteur', audience: string = 'VotreNomApp-Audience', keyPair: IBasaltKeyPairED25519 = new BasaltKeyGenerator().generateKeyPairED25519()): IBasaltTokenSignResult</code></li> <li>Param\u00e8tres:<ul> <li><code>expirationMs</code>: Le temps d'expiration en millisecondes.</li> <li><code>payload</code>: La charge utile \u00e0 signer.</li> <li><code>issuer</code>: L'\u00e9metteur du token. (par d\u00e9faut c'est 'VotreNomApp-\u00c9metteur')</li> <li><code>audience</code>: Le public destinataire du token. (par d\u00e9faut c'est 'VotreNomApp-Audience')</li> <li><code>keyPair</code>: La paire de cl\u00e9s pour la signature. (par d\u00e9faut c'est une nouvelle paire de cl\u00e9s ED25519)</li> </ul> </li> <li>Retourne: Le token sign\u00e9 et les informations associ\u00e9es.</li> </ul>"},{"location":"fr/basalt-auth/reference/token.html#verify","title":"<code>verify</code>","text":"verify <ul> <li>Description: V\u00e9rifie la signature et la date d'expiration d'un token.</li> <li>Signature: <code>public verifier(token: string, publicKey: string): void</code></li> <li>Param\u00e8tres:<ul> <li><code>token</code>: Le token \u00e0 v\u00e9rifier.</li> <li><code>publicKey</code>: La cl\u00e9 publique \u00e0 utiliser pour la v\u00e9rification.</li> </ul> </li> <li>Exceptions: Lance des erreurs pour une structure de token invalide, un token expir\u00e9 ou une signature de token invalide.</li> </ul>"},{"location":"fr/basalt-authorization/index.html","title":"Basalt Authorization","text":"<p>Cooming soon...</p>"},{"location":"fr/basalt-helper/changelog.html","title":"Changelog","text":""},{"location":"fr/basalt-helper/changelog.html#111-2023-11-15","title":"1.1.1 (2023-11-15)","text":""},{"location":"fr/basalt-helper/changelog.html#build-system","title":"Build System","text":"<ul> <li>update dependencies and change version of node (cfebec3)</li> </ul>"},{"location":"fr/basalt-helper/changelog.html#continuous-integration","title":"Continuous Integration","text":"<ul> <li>update release-and-publish github action (33488d9)</li> </ul>"},{"location":"fr/basalt-helper/changelog.html#110-2023-11-15","title":"1.1.0 (2023-11-15)","text":""},{"location":"fr/basalt-helper/changelog.html#features","title":"Features","text":"<ul> <li>improvement basalt-helper more SOLID (4c28d7b)</li> </ul>"},{"location":"fr/basalt-helper/changelog.html#101-2023-10-13","title":"1.0.1 (2023-10-13)","text":""},{"location":"fr/basalt-helper/changelog.html#bug-fixes","title":"Bug Fixes","text":"<ul> <li>release (91d14bd)</li> </ul>"},{"location":"fr/basalt-helper/changelog.html#100-2023-10-13","title":"1.0.0 (2023-10-13)","text":""},{"location":"fr/basalt-helper/changelog.html#features_1","title":"Features","text":"<ul> <li>add basic app and class HelperDataFilter (4ecf74d)</li> <li>Add Password class and dependances (009c814)</li> <li>Add typia dependencies + clean (66a4169)</li> </ul>"},{"location":"fr/basalt-helper/contribution.html","title":"Contribuer \u00e0 Basalt Helper","text":""},{"location":"fr/basalt-helper/contribution.html#introduction","title":"Introduction","text":"<p>Les contributions sont ce qui fait de la communaut\u00e9 open source un endroit incroyable pour apprendre, s'inspirer, et cr\u00e9er. Toute contribution que vous apportez est grandement appr\u00e9ci\u00e9e.</p> <p>Que vous aidiez \u00e0 corriger des bugs, \u00e0 proposer de nouvelles fonctionnalit\u00e9s, \u00e0 mettre \u00e0 jour la documentation ou \u00e0 am\u00e9liorer les styles de code, vous aidez \u00e0 rendre notre projet plus puissant et b\u00e9n\u00e9fique pour la communaut\u00e9.</p> <p>Suivez les \u00e9tapes ci-dessous pour contribuer.</p>"},{"location":"fr/basalt-helper/contribution.html#processus-de-contribution","title":"Processus de contribution","text":"<pre><code>gitGraph:\noptions\n{\n\"nodeSpacing\": 150,\n\"nodeRadius\": 10\n}\nend\ncommit\nbranch stage\ncheckout stage\ncommit\nbranch feature\ncheckout feature\ncommit\ncommit\ncheckout stage\nmerge feature\ncheckout main\nmerge stage</code></pre> <ol> <li>Fork le projet     Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9.</li> <li>Committez vos changements (<code>git commit -m 'Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>stage</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>stage</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>stage</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-helper/contribution.html#notes-supplementaires","title":"Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible. Les projets avec une suite de tests compl\u00e8te comptent sur les contributions pour maintenir la couverture des tests.</p> <p>Consultez les directives de style de code et les guides de contribution sp\u00e9cifiques au projet (s'ils existent) pour vous assurer que votre contribution est en ligne avec les attentes du projet.</p> <p>N'oubliez pas de mettre \u00e0 jour la documentation si n\u00e9cessaire pour refl\u00e9ter vos changements, en particulier si vous ajoutez ou modifiez des fonctionnalit\u00e9s.</p> <p>Soyez ouvert aux commentaires et activement engag\u00e9 dans la discussion sur votre pull request si les membres de la communaut\u00e9 ou les mainteneurs ont des questions ou des pr\u00e9occupations.</p>"},{"location":"fr/basalt-helper/contribution.html#conclusion","title":"Conclusion","text":"<p>Votre temps et vos comp\u00e9tences peuvent grandement b\u00e9n\u00e9ficier au projet et \u00e0 la communaut\u00e9 dans son ensemble.</p> <p>Nous sommes impatients de voir vos contributions et sommes pr\u00eats \u00e0 collaborer pour int\u00e9grer de nouvelles id\u00e9es ou am\u00e9liorations.</p> <p>Merci de contribuer \u00e0 rendre Basalt Helper encore meilleur !</p>"},{"location":"fr/basalt-helper/index.html","title":"Basalt Helper","text":"<p>Warning</p> <p>Basalt est actuellement \u00e0 ses d\u00e9buts, s'il vous pla\u00eet soyez indulgent et h\u00e9sitez pas \u00e0 nous faire part de vos commentaires et suggestions.</p>"},{"location":"fr/basalt-helper/index.html#introduction","title":"Introduction","text":"<p>Basalt Helper joue un r\u00f4le fondamental dans l'\u00e9cosyst\u00e8me Basalt, fournissant une collection de helpers cruciaux destin\u00e9s \u00e0 simplifier et \u00e0 acc\u00e9l\u00e9rer le d\u00e9veloppement backend en Node.js.</p> <p>Ces outils, sous forme de classes diverses, offrent des fonctionnalit\u00e9s essentielles, telles que le hashage de mots de passe, la v\u00e9rification, le filtrage de donn\u00e9es, et bien plus encore.</p> <p>Con\u00e7u pour \u00eatre un compagnon fiable dans le cycle de d\u00e9veloppement, Basalt Helper vise \u00e0 \u00e9liminer les tracas de nombreuses t\u00e2ches courantes, permettant aux d\u00e9veloppeurs de se concentrer sur la logique m\u00e9tier de leurs applications.</p>"},{"location":"fr/basalt-helper/index.html#pourquoi-basalt-helper","title":"Pourquoi Basalt Helper ?","text":"<p>Le choix de Basalt Helper s'explique par sa simplicit\u00e9 et son efficacit\u00e9.</p> <p>En int\u00e9grant des classes pr\u00eates \u00e0 l'emploi, les d\u00e9veloppeurs n'ont plus \u00e0 se soucier des d\u00e9tails impliqu\u00e9s dans le codage de fonctions utilitaires basiques, \u00e9conomisant ainsi un temps pr\u00e9cieux.</p> <p>Que ce soit pour hasher un mot de passe ou pour effectuer des transformations complexes de cl\u00e9s et de valeurs dans des objets, Basalt Helper offre une solution pratique.</p>"},{"location":"fr/basalt-helper/index.html#caracteristiques-principales","title":"Caract\u00e9ristiques Principales","text":"<p>Alors que Basalt Helper n'est pas con\u00e7u pour rivaliser directement avec d'autres packages, il brille dans sa capacit\u00e9 \u00e0 offrir des outils de manipulation de donn\u00e9es robustes.</p> <p>\u00c0 l'avenir, Basalt Helper \u00e9voluera pour inclure une gamme encore plus large d'utilitaires, tels qu'un gestionnaire de fragments de fichiers, \u00e9largissant ainsi son utilit\u00e9 dans divers sc\u00e9narios de d\u00e9veloppement.</p>"},{"location":"fr/basalt-helper/index.html#polyvalence-et-compatibilite","title":"Polyvalence et Compatibilit\u00e9","text":"<p>Basalt Helper est un v\u00e9ritable polyvalent, s'int\u00e9grant sans effort dans tout projet Node.js.</p> <p>Bien qu'il ait \u00e9t\u00e9 initialement con\u00e7u pour r\u00e9pondre aux besoins sp\u00e9cifiques des API, sa polyvalence le rend extr\u00eamement b\u00e9n\u00e9fique pour une myriade d'applications. Sa compatibilit\u00e9 s'\u00e9tend \u00e0 divers packages et environnements Node.js, assurant une exp\u00e9rience d'int\u00e9gration transparente.</p>"},{"location":"fr/basalt-helper/index.html#conclusion","title":"Conclusion","text":"<p>Que vous d\u00e9butiez un nouveau projet ou cherchiez \u00e0 optimiser un syst\u00e8me existant, Basalt Helper est pr\u00eat \u00e0 devenir votre partenaire de confiance, rendant le processus de d\u00e9veloppement non seulement plus g\u00e9rable mais aussi plus agr\u00e9able.</p> <p>Nous sommes impatients de continuer \u00e0 \u00e9voluer avec vos besoins et de vous soutenir dans vos futurs d\u00e9fis de d\u00e9veloppement.</p>"},{"location":"fr/basalt-helper/license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Basalt</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"fr/basalt-helper/getting-started/index.html","title":"Getting Started","text":""},{"location":"fr/basalt-helper/getting-started/index.html#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Bienvenue dans le guide de d\u00e9marrage rapide de Basalt Helper !</p> <p>En quelques minutes, vous allez apprendre \u00e0 int\u00e9grer et \u00e0 utiliser les fonctionnalit\u00e9s puissantes de Basalt Helper dans votre projet Node.js.</p> <p>Pr\u00e9parez-vous \u00e0 simplifier votre d\u00e9veloppement backend.</p>"},{"location":"fr/basalt-helper/getting-started/index.html#prerequis","title":"Pr\u00e9requis","text":"<p>Pour utiliser Basalt Helper, vous devez avoir install\u00e9 Node.js et npm.</p> <p>Vous pouvez utiliser des gestionnaires de versions comme nvm</p> <p>Pour v\u00e9rifier que vous avez bien install\u00e9 Node.js et npm, ouvrez un terminal et tapez les commandes suivantes :</p> <p><pre><code>node -v\n</code></pre> <pre><code>npm -v\n</code></pre></p> node -vv20.9.0npm -v10.2.0"},{"location":"fr/basalt-helper/getting-started/index.html#installation","title":"Installation","text":"TypeScript <p>Basalt Helper est \u00e9crit en TypeScript et est livr\u00e9 avec des types TypeScript int\u00e9gr\u00e9s.</p> <p>Si vous utilisez TypeScript, vous n'avez pas besoin d'installer de types suppl\u00e9mentaires.</p> <p>Si vous utilisez JavaScript, vous pouvez ignorer les types TypeScript.</p> <p>Int\u00e9grer Basalt Helper dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-helper</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet Node.js :</p> <pre><code>npm i @basalt-lab/basalt-helper\n</code></pre> npm i @basalt-lab/basalt-helperadded 1 package, and audited 1 package in 1sfound 0 vulnerabilities"},{"location":"fr/basalt-helper/getting-started/example/data/deep-clone.html","title":"Deep Clone","text":""},{"location":"fr/basalt-helper/getting-started/example/data/deep-clone.html#deep-cloning-data","title":"Deep cloning data","text":"TypeScriptJavaScript <pre><code>import { BasaltDeepCloneUtility } from '@basalt-lab/basalt-helper';\n\nconst data1: { test: { test: string } } = {\n    test: {\n        test: 'test'\n    }\n};\n\nconst data2: number[][] = [[1, 2, 3], [4, 5, 6]];\n\nconst data3: { test: { test: number[] } } = {\n    test: {\n        test: [1, 2, 3]\n    }\n};\nconst data4: ({ test: number[] })[] = [\n    {\n        test: [1, 2, 3]\n    },\n    {\n        test: [4, 5, 6]\n    }\n];\n\nconst clonedData1: { test: { test: string } } = BasaltDeepCloneUtility.deepClone(data1);\nconst clonedData2: number[][] = BasaltDeepCloneUtility.deepClone(data2);\nconst clonedData3: { test: { test: number[] } } = BasaltDeepCloneUtility.deepClone(data3);\nconst clonedData4: ({ test: number[] })[] = BasaltDeepCloneUtility.deepClone(data4);\n\nconsole.log(clonedData1 === data1);\nconsole.log(clonedData2 === data2);\nconsole.log(clonedData3 === data3);\nconsole.log(clonedData4 === data4);\n</code></pre> <pre><code>const { BasaltDeepCloneUtility } = require('@basalt-lab/basalt-helper');\n\nconst data1 = {\n    test: {\n        test: 'test'\n    }\n};\n\nconst data2 = [[1, 2, 3], [4, 5, 6]];\n\nconst data3 = {\n    test: {\n        test: [1, 2, 3]\n    }\n};\nconst data4 = [\n    {\n        test: [1, 2, 3]\n    },\n    {\n        test: [4, 5, 6]\n    }\n];\n\nconst clonedData1 = BasaltDeepCloneUtility.deepClone(data1);\nconst clonedData2 = BasaltDeepCloneUtility.deepClone(data2);\nconst clonedData3 = BasaltDeepCloneUtility.deepClone(data3);\nconst clonedData4 = BasaltDeepCloneUtility.deepClone(data4);\n\nconsole.log(clonedData1 === data1);\nconsole.log(clonedData2 === data2);\nconsole.log(clonedData3 === data3);\nconsole.log(clonedData4 === data4);\n</code></pre> node example.jsfalsefalsefalsefalse"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html","title":"Filter","text":""},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#inclure-uniquement-certaines-cles","title":"Inclure uniquement certaines cl\u00e9s","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyInclusionFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: string; c: string; d: string } = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltKeyInclusionFilter: BasaltKeyInclusionFilter = new BasaltKeyInclusionFilter();\nconst filteredData = basaltKeyInclusionFilter.filter(data, ['a', 'b', 'c']);\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltKeyInclusionFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltKeyInclusionFilter = new BasaltKeyInclusionFilter();\nconst filteredData = basaltKeyInclusionFilter.filter(data, ['a', 'b', 'c']);\nconsole.log(filteredData);\n</code></pre> node example.js{ a: 'a', b: 'b', c: 'c' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#inclure-uniquement-certaines-cles-et-seulement-si-elles-ont-une-valeur","title":"Inclure uniquement certaines cl\u00e9s et seulement si elles ont une valeur","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyInclusionFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: undefined; c: null; d: string } = {\n    a: 'a',\n    b: undefined,\n    c: null,\n    d: 'd',\n};\n\nconst basaltKeyInclusionFilter: BasaltKeyInclusionFilter = new BasaltKeyInclusionFilter();\nconst filteredData = basaltKeyInclusionFilter.filter(data, ['a', 'b', 'c'], true);\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltKeyInclusionFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: undefined,\n    c: null,\n    d: 'd',\n};\n\nconst basaltKeyInclusionFilter = new BasaltKeyInclusionFilter();\nconst filteredData = basaltKeyInclusionFilter.filter(data, ['a', 'b', 'c'], true);\nconsole.log(filteredData);\n</code></pre> node example.js{ a: 'a' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#exclure-certaines-cles","title":"Exclure certaines cl\u00e9s","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyExclusionFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: string; c: string; d: string } = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltKeyExclusionFilter: BasaltKeyExclusionFilter = new BasaltKeyExclusionFilter();\nconst filteredData = basaltKeyExclusionFilter.filter(data, ['a', 'b']);\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltKeyExclusionFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltKeyExclusionFilter = new BasaltKeyExclusionFilter();\nconst filteredData = basaltKeyExclusionFilter.filter(data, ['a', 'b']);\nconsole.log(filteredData);\n</code></pre> node example.js{ c: 'c', d: 'd' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#exclure-certaines-cles-et-exclure-ceux-qui-nont-pas-de-valeur","title":"Exclure certaines cl\u00e9s et exclure ceux qui n'ont pas de valeur","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyExclusionFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: null; c: undefined; d: string } = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n};\n\nconst basaltKeyExclusionFilter: BasaltKeyExclusionFilter = new BasaltKeyExclusionFilter();\nconst filteredData = basaltKeyExclusionFilter.filter(data, ['a'], true);\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltKeyExclusionFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n};\n\nconst basaltKeyExclusionFilter = new BasaltKeyExclusionFilter();\nconst filteredData = basaltKeyExclusionFilter.filter(data, ['a'], true);\nconsole.log(filteredData);\n</code></pre> node example.js{ d: 'd' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#inclure-les-clefs-selon-un-pattern","title":"Inclure les clefs selon un pattern","text":"TypeScriptJavaScript <pre><code>import { BasaltValueFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: string; c: string; d: string } = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltValueFilter: BasaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value: string): boolean =&gt; value === 'a' || value === 'b');\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltValueFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value) =&gt; value === 'a' || value === 'b');\nconsole.log(filteredData);\n</code></pre> node example.js{ a: 'a', b: 'b' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#exclure-les-clefs-selon-un-pattern","title":"Exclure les clefs selon un pattern","text":"TypeScriptJavaScript <pre><code>import { BasaltValueFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: string; c: string; d: string } = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltValueFilter: BasaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value: string): boolean =&gt; value !== 'a' &amp;&amp; value !== 'b');\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltValueFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: 'b',\n    c: 'c',\n    d: 'd',\n};\n\nconst basaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value) =&gt; value !== 'a' &amp;&amp; value !== 'b');\nconsole.log(filteredData);\n</code></pre> node example.js{ c: 'c', d: 'd' }"},{"location":"fr/basalt-helper/getting-started/example/data/filter.html#exclure-les-clefs-selon-un-pattern-et-exclure-ceux-qui-nont-pas-de-valeur","title":"Exclure les clefs selon un pattern et exclure ceux qui n'ont pas de valeur","text":"TypeScriptJavaScript <pre><code>import { BasaltValueFilter } from '@basalt-lab/basalt-helper';\n\nconst data: { a: string; b: null; c: undefined; d: string } = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n};\n\nconst basaltValueFilter: BasaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value: unknown): boolean =&gt; value !== 'a', true);\nconsole.log(filteredData);\n</code></pre> <pre><code>const { BasaltValueFilter } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    a: 'a',\n    b: null,\n    c: undefined,\n    d: 'd',\n};\n\nconst basaltValueFilter = new BasaltValueFilter();\nconst filteredData = basaltValueFilter.filter(data, (value) =&gt; value !== 'a', true);\nconsole.log(filteredData);\n</code></pre> node example.js{ d: 'd' }"},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html","title":"Transformation","text":""},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html#transformation-des-cles-dun-objet-en-camelcase","title":"Transformation des cl\u00e9s d'un objet en camelCase","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyTransformerUtility, BasaltCamelCaseTransformer } from '@basalt-lab/basalt-helper';\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility: BasaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltCamelCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> <pre><code>const { BasaltKeyTransformerUtility, BasaltCamelCaseTransformer } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltCamelCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> node example.js{  camelCase: 'camelCase',  pascalCase: 'PascalCase',  kebabCase: 'kebab-case',  snakeCase: 'snake_case'}"},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html#transformation-des-cles-dun-objet-en-pascalcase","title":"Transformation des cl\u00e9s d'un objet en PascalCase","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyTransformerUtility, BasaltPascalCaseTransformer } from '@basalt-lab/basalt-helper';\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility: BasaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltPascalCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> <pre><code>const { BasaltKeyTransformerUtility, BasaltPascalCaseTransformer } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltPascalCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> node example.js{  CamelCase: 'camelCase',  PascalCase: 'PascalCase',  KebabCase: 'kebab-case',  SnakeCase: 'snake_case'}"},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html#transformation-des-cles-dun-objet-en-kebab-case","title":"Transformation des cl\u00e9s d'un objet en kebab-case","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyTransformerUtility, BasaltKebabCaseTransformer } from '@basalt-lab/basalt-helper';\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility: BasaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltKebabCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> <pre><code>const { BasaltKeyTransformerUtility, BasaltKebabCaseTransformer } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltKebabCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> node example.js{  'camel-case': 'camelCase',  'pascal-case': 'PascalCase',  'kebab-case': 'kebab-case',  'snake-case': 'snake_case'}"},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html#transformation-des-cles-dun-objet-en-snake_case","title":"Transformation des cl\u00e9s d'un objet en snake_case","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyTransformerUtility, BasaltSnakeCaseTransformer } from '@basalt-lab/basalt-helper';\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility: BasaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltSnakeCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> <pre><code>const { BasaltKeyTransformerUtility, BasaltSnakeCaseTransformer } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltSnakeCaseTransformer());\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> node example.js{  camel_case: 'camelCase',  pascal_case: 'PascalCase',  kebab_case: 'kebab-case',  snake_case: 'snake_case'}"},{"location":"fr/basalt-helper/getting-started/example/data/transformation.html#changement-du-format-de-transformation-des-cles","title":"Changement du format de transformation des cl\u00e9s","text":"TypeScriptJavaScript <pre><code>import { BasaltKeyTransformerUtility, BasaltCamelCaseTransformer, BasaltPascalCaseTransformer } from '@basalt-lab/basalt-helper';\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\nconst basaltKeyTransformerUtility: BasaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltCamelCaseTransformer());\nbasaltKeyTransformerUtility.transformer = new BasaltPascalCaseTransformer(); // Change the transformer\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> <pre><code>const { BasaltKeyTransformerUtility, BasaltCamelCaseTransformer, BasaltPascalCaseTransformer } = require('@basalt-lab/basalt-helper');\n\nconst data = {\n    'camelCase': 'camelCase',\n    'PascalCase': 'PascalCase',\n    'kebab-case': 'kebab-case',\n    'snake_case': 'snake_case',\n};\n\n\nconst basaltKeyTransformerUtility = new BasaltKeyTransformerUtility(new BasaltCamelCaseTransformer());\nbasaltKeyTransformerUtility.transformer = new BasaltPascalCaseTransformer(); // Change the transformer\nconsole.log(basaltKeyTransformerUtility.transformKeys(data));\n</code></pre> node example.js{  CamelCase: 'camelCase',  PascalCase: 'PascalCase',  KebabCase: 'kebab-case',  SnakeCase: 'snake_case'}"},{"location":"fr/basalt-helper/getting-started/example/security/password.html","title":"Password","text":""},{"location":"fr/basalt-helper/getting-started/example/security/password.html#hasher-un-mot-de-passe","title":"Hasher un mot de passe","text":"TypeScriptJavaScript <pre><code>import { BasaltPassword } from '@basalt-lab/basalt-core';\n\nconst main = async (): Promise&lt;void&gt; =&gt; {\n    const password: string = 'password';\n    const hashedPassword: string = await BasaltPassword.hashPassword(password);\n    console.log(hashedPassword);\n};\nmain();\n</code></pre> <pre><code>const { BasaltPassword } = require('@basalt-lab/basalt-core');\n\nconst main = async () =&gt; {\n    const password = 'password';\n    const hashedPassword = await BasaltPassword.hashPassword(password);\n    console.log(hashedPassword);\n};\nmain();\n</code></pre> node example.js$argon2id$v=19$m=65536,t=3,p=20$W1Qv4XJ+jaVDI04sLFukTYXI/7FYuyeavMLNUXnnrPQ$JfQgEbewRGjjGIpGEIDp/vIqeX7avK2DqYIddilsqng"},{"location":"fr/basalt-helper/getting-started/example/security/password.html#verifier-un-mot-de-passe","title":"V\u00e9rifier un mot de passe","text":"TypeScriptJavaScript <pre><code>import { BasaltPassword } from '@basalt-lab/basalt-core';\n\nconst main = async (): Promise&lt;void&gt; =&gt; {\n    const password: string = 'password';\n    const hashedPassword: string = await BasaltPassword.hashPassword(password);\n    const isPasswordValid: boolean = await BasaltPassword.verifyPassword(password, hashedPassword);\n    console.log(isPasswordValid);\n};\nmain();\n</code></pre> <pre><code>const { BasaltPassword } = require('@basalt-lab/basalt-core');\n\nconst main = async () =&gt; {\n    const password = 'password';\n    const hashedPassword = await BasaltPassword.hashPassword(password);\n    const isPasswordValid = await BasaltPassword.verifyPassword(password, hashedPassword);\n    console.log(isPasswordValid);\n};\nmain();\n</code></pre> node example.jstrue"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyExclusionFilter.html","title":"BasaltKeyExclusionFilter","text":""},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyExclusionFilter.html#reference-de-la-classe-basaltkeyexclusionfilter","title":"R\u00e9f\u00e9rence de la classe BasaltKeyExclusionFilter","text":"<p><code>BasaltKeyExclusionFilter</code> \u00e9tend la fonctionnalit\u00e9 de <code>BasaltDataFilter</code> pour fournir une m\u00e9thode permettant d'exclure sp\u00e9cifiquement les cl\u00e9s d\u00e9finies d'un objet de donn\u00e9es</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyExclusionFilter.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltDataFilter {\n        #validateData~T extends object~(data: T): void\n        #validateKeys~T extends object~(keys: keyof T[]): void\n    }\n    class BasaltKeyExclusionFilter {\n        filter~T~(data: T, keys: keyof T[], excludeNullUndefined: boolean) T\n    }\n    BasaltKeyExclusionFilter --|&gt; BasaltDataFilter : extends</code></pre>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyExclusionFilter.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyExclusionFilter.html#filter","title":"<code>filter</code>","text":"filter <ul> <li>Description : Exclut les cl\u00e9s sp\u00e9cifi\u00e9es de l'objet de donn\u00e9es fourni. Cr\u00e9e un nouvel objet qui contient toutes les propri\u00e9t\u00e9s de l'objet de donn\u00e9es original, sauf celles dont les cl\u00e9s sont fournies pour exclusion. Il peut \u00e9galement exclure les propri\u00e9t\u00e9s dont les valeurs sont null ou undefined si l'indicateur <code>excludeNullUndefined</code> est d\u00e9fini sur true.</li> <li>Signature : <code>public filter&lt;T extends object&gt;(data: T, keys: (keyof T)[], excludeNullUndefined: boolean = false): T</code></li> <li>Param\u00e8tres :<ul> <li><code>data</code> : L'objet de donn\u00e9es \u00e0 filtrer.</li> <li><code>keys</code> : Un tableau des cl\u00e9s \u00e0 exclure de l'objet de donn\u00e9es.</li> <li><code>excludeNullUndefined</code> (facultatif) : Un drapeau pour d\u00e9terminer si les propri\u00e9t\u00e9s avec des valeurs null ou undefined doivent \u00eatre exclues. Par d\u00e9faut, il est r\u00e9gl\u00e9 sur false.</li> </ul> </li> <li>Renvoie : L'objet de donn\u00e9es filtr\u00e9 avec les cl\u00e9s sp\u00e9cifi\u00e9es exclues.</li> <li>Exceptions : Lance une erreur si l'objet de donn\u00e9es est nul, si l'array des cl\u00e9s est vide, ou si les cl\u00e9s ne sont pas un tableau, etc.</li> </ul>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyInclusionFilter.html","title":"BasaltKeyInclusionFilter","text":""},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyInclusionFilter.html#reference-de-la-classe-basaltkeyinclusionfilter","title":"R\u00e9f\u00e9rence de la classe BasaltKeyInclusionFilter","text":"<p><code>BasaltKeyInclusionFilter</code> \u00e9tend les fonctionnalit\u00e9s de <code>BasaltDataFilter</code> en fournissant une m\u00e9thode pour inclure uniquement les cl\u00e9s sp\u00e9cifi\u00e9es dans un objet de donn\u00e9es.</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyInclusionFilter.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltDataFilter {\n        #validateData~T extends object~(data: T): void\n        #validateKeys~T extends object~(keys: keyof T[]): void\n    }\n    class BasaltKeyInclusionFilter {\n        filter~T~(data: T, keys: keyof T[], excludeNullUndefined: boolean) T\n    }\n    BasaltKeyInclusionFilter --|&gt; BasaltDataFilter : extends</code></pre>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyInclusionFilter.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltKeyInclusionFilter.html#filter","title":"<code>filter</code>","text":"filter <ul> <li>Description : Filtre les donn\u00e9es fournies en incluant uniquement les cl\u00e9s sp\u00e9cifi\u00e9es. L'objet r\u00e9sultant ne contiendra que les propri\u00e9t\u00e9s qui correspondent aux cl\u00e9s fournies. Les propri\u00e9t\u00e9s ayant des valeurs null ou ind\u00e9finies peuvent \u00e9ventuellement \u00eatre exclues en fonction du drapeau <code>excludeNullUndefined</code>.</li> <li>Signature : <code>public filter&lt;T extends object&gt;(data: T, keys: (keyof T)[], excludeNullUndefined: boolean = false): T</code></li> <li>Param\u00e8tres :<ul> <li><code>data</code> : L'objet de donn\u00e9es \u00e0 filtrer.</li> <li><code>keys</code> : Un tableau des cl\u00e9s \u00e0 inclure dans l'objet de donn\u00e9es r\u00e9sultant.</li> <li><code>excludeNullUndefined</code> (optionnel) : Un drapeau pour d\u00e9terminer si les propri\u00e9t\u00e9s ayant des valeurs null ou ind\u00e9finies doivent \u00eatre exclues. Par d\u00e9faut \u00e0 false.</li> </ul> </li> <li>Retourne : L'objet de donn\u00e9es filtr\u00e9 avec uniquement les cl\u00e9s sp\u00e9cifi\u00e9es incluses.</li> <li>Exceptions : Lance une erreur si l'objet de donn\u00e9es est null, si le tableau des cl\u00e9s \u00e0 inclure est vide, ou si les cl\u00e9s ne sont pas un tableau, etc.</li> </ul>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltValueFilter.html","title":"BasaltValueFilter","text":""},{"location":"fr/basalt-helper/reference/data/filter/BasaltValueFilter.html#reference-de-la-classe-basaltvaluefilter","title":"R\u00e9f\u00e9rence de la classe BasaltValueFilter","text":"<p><code>BasaltValueFilter</code> \u00e9tend la fonctionnalit\u00e9 de <code>BasaltDataFilter</code> en fournissant une m\u00e9thode pour filtrer les donn\u00e9es bas\u00e9es sur des crit\u00e8res de valeur d\u00e9finis par une fonction pr\u00e9dicat.</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltValueFilter.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltDataFilter {\n        #validateData~T extends object~(data: T): void\n        #validateKeys~T extends object~(keys: keyof T[]): void\n    }\n    class BasaltValueFilter {\n        filter~T~(data: T, predicate: (value: T[keyof T]) =&gt; boolean, excludeNullUndefined: boolean) T\n    }\n    BasaltValueFilter --|&gt; BasaltDataFilter : extends</code></pre>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltValueFilter.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/filter/BasaltValueFilter.html#filter","title":"<code>filter</code>","text":"filter <ul> <li>Description : Filtre les donn\u00e9es fournies en se basant sur un pr\u00e9dicat appliqu\u00e9 \u00e0 ses valeurs. L'objet r\u00e9sultant inclura seulement les propri\u00e9t\u00e9s dont les valeurs satisfont la fonction pr\u00e9dicat. Les propri\u00e9t\u00e9s avec des valeurs null ou undefined peuvent \u00eatre exclues en option, bas\u00e9 sur le drapeau <code>excludeNullUndefined</code>.</li> <li>Signature : <code>public filter&lt;T extends object&gt; (data: T, predicate: (value: T[keyof T]) =&gt; boolean, excludeNullUndefined: boolean = false): T</code></li> <li>Param\u00e8tres :<ul> <li><code>data</code> : L'objet de donn\u00e9es \u00e0 filtrer.</li> <li><code>predicate</code> : La fonction pr\u00e9dicat \u00e0 appliquer aux valeurs.</li> <li><code>excludeNullUndefined</code> (optionnel) : Drapeau pour d\u00e9terminer si les propri\u00e9t\u00e9s avec des valeurs null ou undefined doivent \u00eatre exclues. Par d\u00e9faut \u00e0 false.</li> </ul> </li> <li>Renvoie : L'objet de donn\u00e9es filtr\u00e9 avec les propri\u00e9t\u00e9s satisfaisant le pr\u00e9dicat.</li> <li>Exceptions : Lance une erreur si l'objet de donn\u00e9es est null, si la fonction pr\u00e9dicat n'est pas valide, etc.</li> </ul>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltCamelCaseTransformer.html","title":"BasaltCamelCaseTransformer","text":""},{"location":"fr/basalt-helper/reference/data/transformation/BasaltCamelCaseTransformer.html#reference-de-la-classe-basaltcamelcasetransformer","title":"R\u00e9f\u00e9rence de la Classe BasaltCamelCaseTransformer","text":"<p><code>BasaltCamelCaseTransformer</code> est une classe qui impl\u00e9mente l'interface <code>IBasaltKeyTransformer</code> pour transformer des cl\u00e9s sous forme de cha\u00eenes de caract\u00e8res dans le format camelCase.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltCamelCaseTransformer.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class IBasaltKeyTransformer {\n        transformKey(string) string\n    }\n    class BasaltCamelCaseTransformer {\n        transformKey(key: string) string\n    }\n    BasaltCamelCaseTransformer ..|&gt; IBasaltKeyTransformer : implements</code></pre>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltCamelCaseTransformer.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltCamelCaseTransformer.html#transformkey","title":"<code>transformKey</code>","text":"transformKey <ul> <li>Description : Transforme une cl\u00e9 en cha\u00eene de caract\u00e8res de n'importe quelle casse en format camelCase.</li> <li>Signature : <code>public transformKey(key: string): string</code></li> <li>Param\u00e8tres :<ul> <li><code>key</code> : La cha\u00eene de caract\u00e8res de la cl\u00e9 \u00e0 transformer en camelCase.</li> </ul> </li> <li>Retourne : La cha\u00eene de caract\u00e8res de la cl\u00e9 transform\u00e9e en camelCase.</li> <li>Exemples :     <pre><code>// retourne \"myKeyName\"\ntransformKey('MyKeyName');\n// retourne \"myKeyName\"\ntransformKey('my-key-name');\n// retourne \"myKeyName\"\ntransformKey('my_key_name');\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltKebabCaseTransformer.html","title":"BasaltKebabCaseTransformer","text":""},{"location":"fr/basalt-helper/reference/data/transformation/BasaltKebabCaseTransformer.html#reference-de-la-classe-basaltkebabcasetransformer","title":"R\u00e9f\u00e9rence de la classe BasaltKebabCaseTransformer","text":"<p><code>BasaltKebabCaseTransformer</code> est une classe qui impl\u00e9mente l'interface <code>IBasaltKeyTransformer</code> pour transformer des cl\u00e9s de cha\u00eene de caract\u00e8res au format kebab-case.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltKebabCaseTransformer.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class IBasaltKeyTransformer {\n        transformKey(string) string\n    }\n    class BasaltKebabCaseTransformer {\n        transformKey(key: string) string\n    }\n    BasaltKebabCaseTransformer ..|&gt; IBasaltKeyTransformer : implements</code></pre>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltKebabCaseTransformer.html#methode-publique","title":"M\u00e9thode publique","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltKebabCaseTransformer.html#transformkey","title":"<code>transformKey</code>","text":"transformKey <ul> <li>Description : Transforme une cl\u00e9 unique de n'importe quelle casse en kebab-case.</li> <li>Signature : <code>public transformKey(key: string): string</code></li> <li>Param\u00e8tres :<ul> <li><code>key</code> : La cha\u00eene de caract\u00e8res de la cl\u00e9 \u00e0 transformer en kebab-case.</li> </ul> </li> <li>Renvoie : La cha\u00eene de la cl\u00e9 transform\u00e9e en kebab-case, avec toutes les lettres en minuscule et les mots s\u00e9par\u00e9s par des tirets.</li> <li>Exemples :     <pre><code>// renvoie \"my-key-name\"\ntransformKey('myKeyName');\n// renvoie \"my-key-name\"\ntransformKey('MyKeyName');\n// renvoie \"my-long-key-name\"\ntransformKey('myLongKeyName');\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltPascalCaseTransformer.html","title":"BasaltPascalCaseTransformer","text":""},{"location":"fr/basalt-helper/reference/data/transformation/BasaltPascalCaseTransformer.html#reference-de-la-classe-basaltpascalcasetransformer","title":"R\u00e9f\u00e9rence de la classe BasaltPascalCaseTransformer","text":"<p><code>BasaltPascalCaseTransformer</code> est une classe qui impl\u00e9mente l'interface <code>IBasaltKeyTransformer</code> pour transformer des cha\u00eenes de caract\u00e8res (cl\u00e9s) au format PascalCase.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltPascalCaseTransformer.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class IBasaltKeyTransformer {\n        transformKey(string) string\n    }\n    class BasaltPascalCaseTransformer {\n        transformKey(key: string) string\n    }\n    BasaltPascalCaseTransformer ..|&gt; IBasaltKeyTransformer : implements</code></pre>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltPascalCaseTransformer.html#methode-publique","title":"M\u00e9thode publique","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltPascalCaseTransformer.html#transformkey","title":"<code>transformKey</code>","text":"transformKey <ul> <li>Description : Transforme une cl\u00e9 unique de n'importe quel format en PascalCase.</li> <li>Signature : <code>public transformKey(key: string): string</code></li> <li>Param\u00e8tres :<ul> <li><code>key</code> : La cha\u00eene de caract\u00e8res (cl\u00e9) \u00e0 transformer en PascalCase.</li> </ul> </li> <li>Renvoie : La cha\u00eene de caract\u00e8res (cl\u00e9) transform\u00e9e en PascalCase, avec la premi\u00e8re lettre de chaque mot en majuscule.</li> <li>Exemples :     <pre><code>// renvoie \"MyKeyName\"\ntransformKey('my_key_name');\n// renvoie \"MyKeyName\"\ntransformKey('my-key-name');\n// renvoie \"MyLongKeyName\"\ntransformKey('myLongKeyName');\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltSnakeCaseTransformer.html","title":"BasaltSnakeCaseTransformer","text":""},{"location":"fr/basalt-helper/reference/data/transformation/BasaltSnakeCaseTransformer.html#reference-de-la-classe-basaltsnakecasetransformer","title":"R\u00e9f\u00e9rence de la Classe BasaltSnakeCaseTransformer","text":"<p><code>BasaltSnakeCaseTransformer</code> est une classe qui impl\u00e9mente l'interface <code>IBasaltKeyTransformer</code> pour transformer des cl\u00e9s sous forme de cha\u00eenes de caract\u00e8res en format snake_case.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltSnakeCaseTransformer.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class IBasaltKeyTransformer {\n        transformKey(string) string\n    }\n    class BasaltSnakeCaseTransformer {\n        transformKey(key: string) string\n    }\n    BasaltSnakeCaseTransformer ..|&gt; IBasaltKeyTransformer : implements</code></pre>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltSnakeCaseTransformer.html#methode-publique","title":"M\u00e9thode Publique","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/transformation/BasaltSnakeCaseTransformer.html#transformkey","title":"<code>transformKey</code>","text":"transformKey <ul> <li>Description : Convertit une cl\u00e9 sous forme de cha\u00eene de caract\u00e8res de n'importe quelle casse en snake_case.</li> <li>Signature : <code>public transformKey(key: string): string</code></li> <li>Param\u00e8tres :<ul> <li><code>key</code> : La cha\u00eene de caract\u00e8res de la cl\u00e9 \u00e0 transformer en snake_case.</li> </ul> </li> <li>Retour : La cha\u00eene de caract\u00e8res de la cl\u00e9 transform\u00e9e en snake_case, avec des tirets bas entre les mots.</li> <li>Exemples :     <pre><code>// retourne \"my_key_name\"\ntransformKey('myKeyName');\n// retourne \"my_key_name\"\ntransformKey('MyKeyName');\n// retourne \"my_key_name\"\ntransformKey('My-Key-Name');\n// retourne \"my_key_name\"\ntransformKey('my key name');\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltDeepCloneUtility.html","title":"BasaltDeepCloneUtility","text":""},{"location":"fr/basalt-helper/reference/data/utility/BasaltDeepCloneUtility.html#reference-de-la-classe-basaltdeepcloneutility","title":"R\u00e9f\u00e9rence de la classe BasaltDeepCloneUtility","text":"<p><code>BasaltDeepCloneUtility</code> est une classe utilitaire pour le clonage profond d'objets.</p>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltDeepCloneUtility.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltDeepCloneUtility {\n        +deepClone(T) T\n    }</code></pre>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltDeepCloneUtility.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltDeepCloneUtility.html#deepclone","title":"<code>deepClone</code>","text":"deepClone <ul> <li>Description : Cr\u00e9e un clone profond de l'objet de donn\u00e9es fourni.</li> <li>Signature : <code>public static deepClone&lt;T&gt;(data: T): T</code></li> <li>Param\u00e8tres :<ul> <li><code>data</code> : L'objet de donn\u00e9es \u00e0 cloner.</li> </ul> </li> <li>Renvoie : L'objet clon\u00e9 en profondeur.</li> <li>Exceptions : Lance une erreur si les donn\u00e9es sont nulles ou non d\u00e9finies.</li> <li>Exemples :     <pre><code>// Renvoie un nouvel objet Date avec la m\u00eame valeur de temps\ndeepClone(new Date());\n\n// Renvoie une nouvelle expression r\u00e9guli\u00e8re bas\u00e9e sur l'originale\ndeepClone(new RegExp('abc'));\n\n// Renvoie un nouveau tableau dont les \u00e9l\u00e9ments sont des clones profonds\ndeepClone([1, [2, 3], { a: 'b' }]);\n\n// Renvoie un nouvel objet avec des propri\u00e9t\u00e9s clon\u00e9es en profondeur\ndeepClone({ x: { y: { z: 1 } } });\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html","title":"BasaltKeyTransformerUtility","text":""},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#reference-de-la-classe-basaltkeytransformerutility","title":"R\u00e9f\u00e9rence de la classe BasaltKeyTransformerUtility","text":"<p>La <code>BasaltKeyTransformerUtility</code> est une classe utilitaire servant \u00e0 transformer les cl\u00e9s d'un objet en fonction d'une strat\u00e9gie de transformation de cl\u00e9s sp\u00e9cifi\u00e9e.</p>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltKeyTransformerUtility {\n        -_transformer IBasaltKeyTransformer\n        +constructor(transformer) void\n        +set transformer(transformer) void\n        +transformKeys(T) T\n    }</code></pre>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#constructor","title":"<code>constructor</code>","text":"constructor <ul> <li>Description : Cr\u00e9e une nouvelle instance de <code>BasaltKeyTransformerUtility</code>.</li> <li>Signature : <code>constructor(transformer: IBasaltKeyTransformer)</code></li> <li>Param\u00e8tres :<ul> <li><code>transformer</code> : La strat\u00e9gie de transformation de cl\u00e9s \u00e0 utiliser.</li> </ul> </li> <li>Exceptions : Lance une erreur si la strat\u00e9gie de transformation de cl\u00e9s est nulle ou non d\u00e9finie.</li> </ul>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#transformer-setter","title":"<code>transformer (setter)</code>","text":"transformer (setter) <ul> <li>Description: D\u00e9finit une nouvelle strat\u00e9gie de transformation pour les cl\u00e9s.</li> <li>Signature: <code>set transformer(transformer: IBasaltKeyTransformer)</code></li> <li>Param\u00e8tres:<ul> <li><code>transformer</code>: Une instance d'une classe qui impl\u00e9mente l'interface <code>IBasaltKeyTransformer</code>.</li> </ul> </li> </ul>"},{"location":"fr/basalt-helper/reference/data/utility/BasaltKeyTransformerUtility.html#transformkeys","title":"<code>transformKeys</code>","text":"transformKeys <ul> <li>Description: Transforme les cl\u00e9s de l'objet donn\u00e9 en utilisant la strat\u00e9gie de transformation actuelle.</li> <li>Signature: <code>public transformKeys&lt;T extends object&gt;(data: T): T</code></li> <li>Param\u00e8tres:<ul> <li><code>data</code>: L'objet dont les cl\u00e9s doivent \u00eatre transform\u00e9es.</li> </ul> </li> <li>Retourne: Un nouvel objet avec les cl\u00e9s transform\u00e9es.</li> <li>Exceptions: L\u00e8ve une erreur si l'objet de donn\u00e9es fourni est nul ou ind\u00e9fini. L\u00e8ve \u00e9galement une erreur si l'objet de donn\u00e9es n'est pas un objet simple.</li> <li>Exemples:     <pre><code>// retourne { myKey: \"valeur\" }\ntransformKeys({ \"my-key\": \"valeur\" });\n</code></pre></li> </ul>"},{"location":"fr/basalt-helper/reference/security/password.html","title":"R\u00e9f\u00e9rence de la classe BasaltPassword","text":"<p>'BasaltPassword' est une classe utilitaire offrant des m\u00e9thodes pour la gestion s\u00e9curis\u00e9e des mots de passe. Elle utilise Argon2, un algorithme de hachage de mots de passe, pour effectuer des op\u00e9rations de hachage et de v\u00e9rification.</p>"},{"location":"fr/basalt-helper/reference/security/password.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltPassword {\n        -static _parallelism: number\n        +static hashPassword(password: string): Promise&lt;string&gt;\n        +static verifyPassword(password: string, hashedPassword: string): Promise&lt;boolean&gt;\n    }</code></pre>"},{"location":"fr/basalt-helper/reference/security/password.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-helper/reference/security/password.html#hashpassword","title":"<code>hashPassword</code>","text":"hashPassword <ul> <li>Description : Hache un mot de passe en utilisant l'algorithme Argon2.</li> <li>Signature : 'static async hashPassword(password: string): Promise' <li>Param\u00e8tres :<ul> <li><code>password</code> : Le mot de passe \u00e0 hacher.</li> </ul> </li> <li>Retour : Le mot de passe hach\u00e9 sous forme de cha\u00eene de caract\u00e8res.</li> <li>Exceptions : Lance une erreur si le mot de passe est vide ou si un probl\u00e8me est survenu lors du hachage.</li>"},{"location":"fr/basalt-helper/reference/security/password.html#verifypassword","title":"<code>verifyPassword</code>","text":"verifyPassword <ul> <li>Description : V\u00e9rifie un mot de passe par rapport \u00e0 sa version hach\u00e9e.</li> <li>Signature : 'static async verifyPassword(password: string, hashedPassword: string): Promise' <li>Param\u00e8tres :<ul> <li><code>password</code> : Le mot de passe en clair \u00e0 v\u00e9rifier.</li> <li><code>hashedPassword</code> : Le mot de passe hach\u00e9 pour la v\u00e9rification.</li> </ul> </li> <li>Retour : Un bool\u00e9en indiquant si le mot de passe est correct.</li> <li>Exceptions : Lance une erreur si le mot de passe est vide, si les mots de passe ne correspondent pas, ou si un probl\u00e8me survient lors de la v\u00e9rification.</li>"},{"location":"fr/basalt-http/index.html","title":"Basalt HTTP","text":"<p>Cooming soon...</p>"},{"location":"fr/basalt-logger/contribution.html","title":"Contribuer \u00e0 Basalt Logger","text":""},{"location":"fr/basalt-logger/contribution.html#introduction","title":"Introduction","text":"<p>Les contributions sont ce qui fait de la communaut\u00e9 open source un endroit incroyable pour apprendre, s'inspirer, et cr\u00e9er. Toute contribution que vous apportez est grandement appr\u00e9ci\u00e9e.</p> <p>Que vous aidiez \u00e0 corriger des bugs, \u00e0 proposer de nouvelles fonctionnalit\u00e9s, \u00e0 mettre \u00e0 jour la documentation ou \u00e0 am\u00e9liorer les styles de code, vous aidez \u00e0 rendre notre projet plus puissant et b\u00e9n\u00e9fique pour la communaut\u00e9.</p> <p>Suivez les \u00e9tapes ci-dessous pour contribuer.</p>"},{"location":"fr/basalt-logger/contribution.html#processus-de-contribution","title":"Processus de contribution","text":"<pre><code>gitGraph:\noptions\n{\n\"nodeSpacing\": 150,\n\"nodeRadius\": 10\n}\nend\ncommit\nbranch stage\ncheckout stage\ncommit\nbranch feature\ncheckout feature\ncommit\ncommit\ncheckout stage\nmerge feature\ncheckout main\nmerge stage</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9.</li> <li>Committez vos changements (<code>git commit -m 'Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>stage</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>stage</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>stage</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-logger/contribution.html#notes-supplementaires","title":"Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible. Les projets avec une suite de tests compl\u00e8te comptent sur les contributions pour maintenir la couverture des tests.</p> <p>Consultez les directives de style de code et les guides de contribution sp\u00e9cifiques au projet (s'ils existent) pour vous assurer que votre contribution est en ligne avec les attentes du projet.</p> <p>N'oubliez pas de mettre \u00e0 jour la documentation si n\u00e9cessaire pour refl\u00e9ter vos changements, en particulier si vous ajoutez ou modifiez des fonctionnalit\u00e9s.</p> <p>Soyez ouvert aux commentaires et activement engag\u00e9 dans la discussion sur votre pull request si les membres de la communaut\u00e9 ou les mainteneurs ont des questions ou des pr\u00e9occupations.</p>"},{"location":"fr/basalt-logger/contribution.html#conclusion","title":"Conclusion","text":"<p>Votre temps et vos comp\u00e9tences peuvent grandement b\u00e9n\u00e9ficier au projet et \u00e0 la communaut\u00e9 dans son ensemble.</p> <p>Nous sommes impatients de voir vos contributions et sommes pr\u00eats \u00e0 collaborer pour int\u00e9grer de nouvelles id\u00e9es ou am\u00e9liorations.</p> <p>Merci de contribuer \u00e0 rendre Basalt Logger encore meilleur !</p>"},{"location":"fr/basalt-logger/index.html","title":"Basalt Logger","text":"<p>Warning</p> <p>Basalt est actuellement \u00e0 ses d\u00e9buts, s'il vous pla\u00eet soyez indulgent et h\u00e9sitez pas \u00e0 nous faire part de vos commentaires et suggestions.</p>"},{"location":"fr/basalt-logger/index.html#introduction","title":"Introduction","text":"<p>Basalt Logger est une biblioth\u00e8que de logging flexible et robuste pour TypeScript/JavaScript, con\u00e7ue pour une utilisation facile et intuitive dans divers environnements de d\u00e9veloppement. Gr\u00e2ce \u00e0 sa structure modulaire et ses strat\u00e9gies de logging extensibles, Basalt Logger s'adapte parfaitement \u00e0 tout projet n\u00e9cessitant une journalisation d\u00e9taill\u00e9e et personnalisable.</p> <p>La facilit\u00e9 d'int\u00e9gration de Basalt Logger dans vos applications TypeScript/JavaScript vous permet d'enrichir vos projets avec un syst\u00e8me de journalisation puissant sans alourdir votre code.</p>"},{"location":"fr/basalt-logger/index.html#pourquoi-basalt-logger","title":"Pourquoi Basalt Logger ?","text":"<ul> <li>Polyvalence: Adaptable \u00e0 divers environnements et exigences, gr\u00e2ce \u00e0 son architecture flexible.</li> <li>Extensibilit\u00e9: Permet l'ajout de strat\u00e9gies de logging personnalis\u00e9es, telles que la journalisation dans la console ou dans des fichiers.</li> <li>Facilit\u00e9 d'utilisation: Con\u00e7ue pour \u00eatre intuitive, avec une API simple et des exemples de code pour une mise en route rapide.</li> <li>Performance et Non-Blocage: Con\u00e7u pour \u00eatre l\u00e9ger et efficace, Basalt Logger assure une journalisation rapide et non bloquante, minimisant ainsi l'impact sur les performances de l'application.</li> </ul>"},{"location":"fr/basalt-logger/index.html#caracteristiques-principales","title":"Caract\u00e9ristiques Principales","text":"<ul> <li>Strat\u00e9gies de Logging: Int\u00e9grez facilement diverses strat\u00e9gies de logging comme la journalisation dans la console.</li> <li>Gestion des Niveaux de Log: Utilisez des niveaux de log (ERROR, WARN, INFO) pour filtrer et cat\u00e9goriser les messages de log.</li> <li>Gestion des Erreurs: Traitez les erreurs sp\u00e9cifiques au logging avec <code>BasaltLoggerError</code>, une extension personnalis\u00e9e de la classe Error.</li> </ul>"},{"location":"fr/basalt-logger/index.html#conclusion","title":"Conclusion","text":"<p>Que vous d\u00e9veloppiez une petite application ou un syst\u00e8me complexe, Basalt Logger offre les outils n\u00e9cessaires pour une journalisation efficace et adapt\u00e9e \u00e0 vos besoins. Nous sommes d\u00e9di\u00e9s \u00e0 l'am\u00e9lioration continue de Basalt Logger pour r\u00e9pondre \u00e0 l'\u00e9volution de vos exigences en mati\u00e8re de journalisation.</p>"},{"location":"fr/basalt-logger/license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Basalt</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"fr/basalt-logger/getting-started/index.html","title":"Getting Started","text":""},{"location":"fr/basalt-logger/getting-started/index.html#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Bienvenue dans le guide de d\u00e9marrage rapide de Basalt Logger !</p> <p>En quelques minutes, vous allez apprendre \u00e0 int\u00e9grer et \u00e0 utiliser les fonctionnalit\u00e9s de Basalt Logger dans votre projet.</p>"},{"location":"fr/basalt-logger/getting-started/index.html#prerequis","title":"Pr\u00e9requis","text":"<p>Pour utiliser Basalt Logger, vous devez avoir install\u00e9 Node.js et npm.</p> <p>Vous pouvez utiliser des gestionnaires de versions comme nvm</p> <p>Pour v\u00e9rifier que vous avez bien install\u00e9 Node.js et npm, ouvrez un terminal et tapez les commandes suivantes :</p> <p><pre><code>node -v\n</code></pre> <pre><code>npm -v\n</code></pre></p> node -vv20.9.0npm -v10.2.0"},{"location":"fr/basalt-logger/getting-started/index.html#installation","title":"Installation","text":"TypeScript <p>Basalt Logger est \u00e9crit en TypeScript et est livr\u00e9 avec des types TypeScript int\u00e9gr\u00e9s.</p> <p>Si vous utilisez TypeScript, vous n'avez pas besoin d'installer de types suppl\u00e9mentaires.</p> <p>Si vous utilisez JavaScript, vous pouvez ignorer les types TypeScript.</p> <p>Int\u00e9grer Basalt Logger dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-socket</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet :</p> <pre><code>npm i @basalt-lab/basalt-logger\n</code></pre> npm i @basalt-lab/basalt-loggeradded 1 package, and audited 1 package in 1sfound 0 vulnerabilities"},{"location":"fr/basalt-logger/getting-started/example/logger.html","title":"Logger","text":""},{"location":"fr/basalt-logger/getting-started/example/logger.html#ajout-dune-strategie-de-log","title":"Ajout d'une strategie de log","text":"TypeScriptJavaScript <pre><code>import { BasaltLogger } from './BasaltLogger';\nimport { ConsoleLoggerStrategy } from '@/Strategies';\n\nBasaltLogger.addStrategy(new ConsoleLoggerStrategy());\n\nBasaltLogger.log('hello world');\n</code></pre> <pre><code>const { BasaltLogger } = require('./BasaltLogger');\nconst { ConsoleLoggerStrategy } = require('@/Strategies');\n\nBasaltLogger.addStrategy(new ConsoleLoggerStrategy());\nBasaltLogger.log('hello world');\n</code></pre> node example.js[2023-11-20 18:46:20] LOG : hello world"},{"location":"fr/basalt-logger/getting-started/example/logger.html#suppression-dune-strategie-specifique-de-log","title":"Suppression d'une strategie specifique de log","text":"TypeScriptJavaScript <pre><code>import { BasaltLogger } from './BasaltLogger';\nimport { ConsoleLoggerStrategy } from '@/Strategies';\n\nconst consoleStrategy = new ConsoleLoggerStrategy();\n\nBasaltLogger.addStrategy(consoleStrategy);\nBasaltLogger.removeStrategy(consoleStrategy);\n</code></pre> <pre><code>const { BasaltLogger } = require('./BasaltLogger');\nconst { ConsoleLoggerStrategy } = require('@/Strategies');\n\nconst consoleStrategy = new ConsoleLoggerStrategy();\n\nBasaltLogger.addStrategy(consoleStrategy);\nBasaltLogger.removeStrategy(consoleStrategy);\n</code></pre>"},{"location":"fr/basalt-logger/getting-started/example/logger.html#suppression-de-toutes-les-strategies-de-log","title":"Suppression de toutes les strategies de log","text":"TypeScriptJavaScript <pre><code>import { BasaltLogger } from './BasaltLogger';\nimport { ConsoleLoggerStrategy } from '@/Strategies';\n\nconst consoleStrategy = new ConsoleLoggerStrategy();\n\nBasaltLogger.addStrategy(consoleStrategy);\nBasaltLogger.clearStrategies();\n</code></pre> <pre><code>const { BasaltLogger } = require('./BasaltLogger');\nconst { ConsoleLoggerStrategy } = require('@/Strategies');\n\nconst consoleStrategy = new ConsoleLoggerStrategy();\n\nBasaltLogger.addStrategy(consoleStrategy);\nBasaltLogger.clearStrategies();\n</code></pre>"},{"location":"fr/basalt-logger/getting-started/example/logger.html#creation-dune-strategie-de-log","title":"Cr\u00e9ation d'une strategie de log","text":"TypeScriptJavaScript <pre><code>import { appendFileSync } from 'fs';\n\nimport { BasaltLogger } from './BasaltLogger';\nimport { ILoggerStrategy } from '@/Interfaces';\nimport { LogLevels } from '@/Enums';\n\nclass FileLoggerStrategy implements ILoggerStrategy {\n    public log(level: LogLevels, message: string, object?: unknown): void {\n        appendFileSync('./test.log', `${level}: ${message}\\n`);\n    }\n}\n\nBasaltLogger.addStrategy(new FileLoggerStrategy());\nBasaltLogger.log('hello world');\n</code></pre> <pre><code>const { appendFileSync } = require('fs');\n\nconst { BasaltLogger } = require('./BasaltLogger');\nconst { LogLevels } = require('@/Enums');\n\nclass FileLoggerStrategy {\n    log(level, message, object) {\n        appendFileSync('./test.log', `${level}: ${message}\\n`);\n    }\n}\n\nBasaltLogger.addStrategy(new FileLoggerStrategy());\nBasaltLogger.log('hello world');\n</code></pre> node example.jscat test.log[2023-11-21 20:24:00] LOG : hello world"},{"location":"fr/basalt-logger/getting-started/example/logger.html#ajout-de-plusieurs-strategies-de-log","title":"Ajout de plusieurs strategies de log","text":"TypeScriptJavaScript <pre><code>import { appendFileSync } from 'fs';\n\nimport { BasaltLogger } from './BasaltLogger';\nimport { ConsoleLoggerStrategy } from '@/Strategies';\nimport { ILoggerStrategy } from '@/Interfaces';\nimport { LogLevels } from '@/Enums';\n\nclass FileLoggerStrategy implements ILoggerStrategy {\n    public log(level: LogLevels, message: string, object?: unknown): void {\n        appendFileSync('./test.log', `${level}: ${message}\\n`);\n    }\n}\n\nBasaltLogger.addStrategies([\n    new ConsoleLoggerStrategy(),\n    new FileLoggerStrategy(),\n]);\n\nBasaltLogger.log('hello world');\n</code></pre> <pre><code>const { appendFileSync } = require('fs');\n\nconst { BasaltLogger } = require('./BasaltLogger');\nconst { ConsoleLoggerStrategy } = require('@/Strategies');\nconst { LogLevels } = require('@/Enums');\n\nclass FileLoggerStrategy {\n    log(level, message, object) {\n        appendFileSync('./test.log', `${level}: ${message}\\n`);\n    }\n}\n\nBasaltLogger.addStrategies([\n    new ConsoleLoggerStrategy(),\n    new FileLoggerStrategy(),\n]);\n\nBasaltLogger.log('hello world');\n</code></pre> node example.js[2023-11-21 20:27:06] LOG : hello worldcat test.log[2023-11-21 20:24:00] LOG : hello world"},{"location":"fr/basalt-logger/getting-started/example/logger.html#tout-les-niveaux-de-log","title":"Tout les niveaux de log","text":"TypeScriptJavaScript <pre><code>import { BasaltLogger } from './BasaltLogger';\nimport { ConsoleLoggerStrategy } from '@/Strategies';\n\nBasaltLogger.addStrategy(new ConsoleLoggerStrategy());\n\nBasaltLogger.log('hello world');\nBasaltLogger.info('hello world');\nBasaltLogger.debug('hello world');\nBasaltLogger.warn('hello world');\nBasaltLogger.error('hello world');\n</code></pre> <pre><code>const { BasaltLogger } = require('./BasaltLogger');\nconst { ConsoleLoggerStrategy } = require('@/Strategies');\n\nBasaltLogger.addStrategy(new ConsoleLoggerStrategy());\n\nBasaltLogger.log('hello world');\nBasaltLogger.info('hello world');\nBasaltLogger.debug('hello world');\nBasaltLogger.warn('hello world');\nBasaltLogger.error('hello world');\n</code></pre> node example.js[2023-11-20 18:49:47] LOG : hello world[2023-11-20 18:49:47] INFO : hello world[2023-11-20 18:49:47] DEBUG : hello world[2023-11-20 18:49:47] WARN : hello world[2023-11-20 18:49:47] ERROR : hello world"},{"location":"fr/basalt-logger/reference/BasaltLogger.html","title":"BasaltLogger","text":""},{"location":"fr/basalt-logger/reference/BasaltLogger.html#reference-de-la-classe-basaltlogger","title":"R\u00e9f\u00e9rence de la classe BasaltLogger","text":"<p><code>BasaltLogger</code> est un syst\u00e8me de journalisation flexible non bloquant, qui permet plusieurs strat\u00e9gies pour la sortie des logs.</p>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#diagramme","title":"Diagramme","text":"<pre><code>classDiagram\n    class BasaltLogger {\n        -_strategies ILoggerStrategy[]\n        -_logStream Writable\n        +addStrategy(strategy) void\n        +addStrategies(strategies) void\n        +removeStrategy(strategy) void\n        +removeStrategies(strategies) void\n        +clearStrategies() void\n        +error(message, object) void\n        +warn(message, object) void\n        +info(message, object) void\n        +debug(message, object) void\n        +log(message, object) void\n        -executeStrategies(level, message, object) void\n        -formatLogEntry(level, message, object) string\n        -out(level, message, object) void\n    }</code></pre>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#methodes-publiques","title":"M\u00e9thodes publiques","text":"<p>Ci-dessous, vous trouverez les d\u00e9tails techniques de chaque m\u00e9thode publique disponible.</p>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#addstrategy","title":"<code>addStrategy</code>","text":"addStrategy <ul> <li>Description : Ajoute une strat\u00e9gie de journalisation au logger.</li> <li>Signature : <code>public static addStrategy(strategy: ILoggerStrategy): void</code></li> <li>Param\u00e8tres :<ul> <li><code>strategy</code> : La strat\u00e9gie de journalisation \u00e0 ajouter.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si la strat\u00e9gie est d\u00e9j\u00e0 ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#addstrategies","title":"<code>addStrategies</code>","text":"addStrategies <ul> <li>Description : Ajoute plusieurs strat\u00e9gies de journalisation au logger.</li> <li>Signature : <code>public static addStrategies(strategies: ILoggerStrategy[]): void</code></li> <li>Param\u00e8tres :<ul> <li><code>strategies</code> : Un tableau de strat\u00e9gies de journalisation \u00e0 ajouter.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si une des strat\u00e9gies est d\u00e9j\u00e0 ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#removestrategy","title":"<code>removeStrategy</code>","text":"removeStrategy <ul> <li>Description : Supprime une strat\u00e9gie de journalisation du logger.</li> <li>Signature : <code>public static removeStrategy(strategy: ILoggerStrategy): void</code></li> <li>Param\u00e8tres :<ul> <li><code>strategy</code> : La strat\u00e9gie de journalisation \u00e0 supprimer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si la strat\u00e9gie n'est pas trouv\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#removestrategies","title":"<code>removeStrategies</code>","text":"removeStrategies <ul> <li>Description : Supprime plusieurs strat\u00e9gies de journalisation du logger.</li> <li>Signature : <code>public static removeStrategies(strategies: ILoggerStrategy[]): void</code></li> <li>Param\u00e8tres :<ul> <li><code>strategies</code> : Un tableau de strat\u00e9gies de journalisation \u00e0 supprimer.</li> </ul> </li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#clearstrategies","title":"<code>clearStrategies</code>","text":"clearStrategies <ul> <li>Description : Efface toutes les strat\u00e9gies de journalisation du logger.</li> <li>Signature : <code>public static clearStrategies(): void</code></li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#log","title":"<code>log</code>","text":"log <ul> <li>Description : M\u00e9thodes pour enregistrer des messages.</li> <li>Signature : <code>public static log(message: string, object?: unknown): void</code> (et similaire pour <code>warn</code>, <code>info</code>, <code>debug</code>, <code>error</code>)</li> <li>Param\u00e8tres :<ul> <li><code>message</code> : Le message \u00e0 enregistrer.</li> <li><code>object</code> (optionnel) : Informations suppl\u00e9mentaires \u00e0 enregistrer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si aucune strat\u00e9gie n'est ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#info","title":"<code>info</code>","text":"info <ul> <li>Description : M\u00e9thodes pour enregistrer des messages.</li> <li>Signature : <code>public static info(message: string, object?: unknown): void</code> (et similaire pour <code>warn</code>, <code>error</code>, <code>debug</code>, <code>log</code>)</li> <li>Param\u00e8tres :<ul> <li><code>message</code> : Le message \u00e0 enregistrer.</li> <li><code>object</code> (optionnel) : Informations suppl\u00e9mentaires \u00e0 enregistrer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si aucune strat\u00e9gie n'est ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#debug","title":"<code>debug</code>","text":"debug <ul> <li>Description : M\u00e9thodes pour enregistrer des messages.</li> <li>Signature : <code>public static debug(message: string, object?: unknown): void</code> (et similaire pour <code>warn</code>, <code>info</code>, <code>error</code>, <code>log</code>)</li> <li>Param\u00e8tres :<ul> <li><code>message</code> : Le message \u00e0 enregistrer.</li> <li><code>object</code> (optionnel) : Informations suppl\u00e9mentaires \u00e0 enregistrer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si aucune strat\u00e9gie n'est ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#warn","title":"<code>warn</code>","text":"warn <ul> <li>Description : M\u00e9thodes pour enregistrer des messages.</li> <li>Signature : <code>public static warn(message: string, object?: unknown): void</code> (et similaire pour <code>error</code>, <code>info</code>, <code>debug</code>, <code>log</code>)</li> <li>Param\u00e8tres :<ul> <li><code>message</code> : Le message \u00e0 enregistrer.</li> <li><code>object</code> (optionnel) : Informations suppl\u00e9mentaires \u00e0 enregistrer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si aucune strat\u00e9gie n'est ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-logger/reference/BasaltLogger.html#error","title":"<code>error</code>","text":"error <ul> <li>Description : M\u00e9thodes pour enregistrer des messages.</li> <li>Signature : <code>public static error(message: string, object?: unknown): void</code> (et similaire pour <code>warn</code>, <code>info</code>, <code>debug</code>, <code>log</code>)</li> <li>Param\u00e8tres :<ul> <li><code>message</code> : Le message \u00e0 enregistrer.</li> <li><code>object</code> (optionnel) : Informations suppl\u00e9mentaires \u00e0 enregistrer.</li> </ul> </li> <li>Exceptions : Lance une erreur <code>BasaltLoggerError</code> si aucune strat\u00e9gie n'est ajout\u00e9e.</li> </ul>"},{"location":"fr/basalt-message-broker/index.html","title":"Basalt HTTP","text":"<p>Cooming soon...</p>"},{"location":"fr/basalt-socket/changelog.html","title":"Changelog","text":""},{"location":"fr/basalt-socket/changelog.html#100-2023-11-15","title":"1.0.0 (2023-11-15)","text":""},{"location":"fr/basalt-socket/changelog.html#features","title":"Features","text":"<ul> <li>Add BasalSocket Server and Event Classes (4336fa5)</li> <li>Add classes gateway socket io client (4a74225)</li> <li>Add Gateway classes (e86da32)</li> <li>Add Gateway interfaces (61fe976)</li> <li>Add interface for gateway socket io client (c23dbde)</li> <li>Add interfaces for Basalt Websocket server (2e4ce47)</li> <li>improvements of BasaltSocketServer (dabacf8)</li> <li>initialization of basalt-socket (3e4be7b)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#bug-fixes","title":"Bug Fixes","text":"<ul> <li>prefix correction add default / -&gt; prefix/eventName (4969261)</li> <li>remove default prefix '/' and allow to empty prefix (1b2c179)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#code-refactoring","title":"Code Refactoring","text":"<ul> <li>change console.log (5f5d92f)</li> <li>change name gateway to client (bc73675)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#build-system","title":"Build System","text":"<ul> <li>add dependencies (cec2010)</li> <li>Add dependencies socket io client (e9d34b6)</li> <li>update dependancies (da47991)</li> <li>update dependencies (67b1faf)</li> <li>update dependencies (a614d0e)</li> <li>Update package json (d124e87)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#continuous-integration","title":"Continuous Integration","text":"<ul> <li>update release-and-publish github action (78daf47)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#documentation","title":"Documentation","text":"<ul> <li>write readme (3226957)</li> </ul>"},{"location":"fr/basalt-socket/changelog.html#miscellaneous-chores","title":"Miscellaneous Chores","text":"<ul> <li>Add keywords (b51cef7)</li> <li>update npmignore (e4dc04d)</li> </ul>"},{"location":"fr/basalt-socket/contribution.html","title":"Contribuer \u00e0 Basalt Socket","text":""},{"location":"fr/basalt-socket/contribution.html#introduction","title":"Introduction","text":"<p>Les contributions sont ce qui fait de la communaut\u00e9 open source un endroit incroyable pour apprendre, s'inspirer, et cr\u00e9er. Toute contribution que vous apportez est grandement appr\u00e9ci\u00e9e.</p> <p>Que vous aidiez \u00e0 corriger des bugs, \u00e0 proposer de nouvelles fonctionnalit\u00e9s, \u00e0 mettre \u00e0 jour la documentation ou \u00e0 am\u00e9liorer les styles de code, vous aidez \u00e0 rendre notre projet plus puissant et b\u00e9n\u00e9fique pour la communaut\u00e9.</p> <p>Suivez les \u00e9tapes ci-dessous pour contribuer.</p>"},{"location":"fr/basalt-socket/contribution.html#processus-de-contribution","title":"Processus de contribution","text":"<pre><code>gitGraph:\noptions\n{\n\"nodeSpacing\": 150,\n\"nodeRadius\": 10\n}\nend\ncommit\nbranch stage\ncheckout stage\ncommit\nbranch feature\ncheckout feature\ncommit\ncommit\ncheckout stage\nmerge feature\ncheckout main\nmerge stage</code></pre> <ol> <li>Fork le projet    Commencez par cr\u00e9er un fork du d\u00e9p\u00f4t sur GitHub. Cela vous aidera \u00e0 cr\u00e9er votre propre copie du projet sur votre compte, vous permettant d'y apporter des modifications librement.</li> <li>Cr\u00e9ez votre branche de fonctionnalit\u00e9 (<code>git checkout -b feature/AmazingFeature</code>)     Cr\u00e9ez une nouvelle branche pour travailler sur votre fonctionnalit\u00e9.</li> <li>Committez vos changements (<code>git commit -m 'Add some AmazingFeature'</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les commiter et les pr\u00e9parer pour le push.</li> <li>Push vers la branche (<code>git push origin feature/AmazingFeature</code>)     Une fois que vous avez termin\u00e9 vos modifications, vous pouvez les pousser vers votre fork.</li> <li>Ouvrez une Pull Request vers la branche <code>stage</code>     Une fois que vous avez pouss\u00e9 vos modifications vers votre fork, vous pouvez ouvrir une Pull Request vers la branche <code>stage</code> du d\u00e9p\u00f4t principal.</li> <li>Apr\u00e8s la validation de votre Pull Request, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.     Une fois que votre Pull Request a \u00e9t\u00e9 valid\u00e9e, votre branche sera fusionn\u00e9e dans <code>stage</code> et supprim\u00e9e.</li> </ol> <p>Note</p> <p>Assurez-vous de toujours mettre \u00e0 jour votre branche locale avec la branche <code>stage</code> avant de commencer \u00e0 travailler sur une nouvelle fonctionnalit\u00e9 pour vous assurer que vous travaillez avec la derni\u00e8re version du projet.</p>"},{"location":"fr/basalt-socket/contribution.html#notes-supplementaires","title":"Notes suppl\u00e9mentaires","text":"<p>Assurez-vous de tester toutes vos modifications et d'ajouter des tests lorsque cela est possible. Les projets avec une suite de tests compl\u00e8te comptent sur les contributions pour maintenir la couverture des tests.</p> <p>Consultez les directives de style de code et les guides de contribution sp\u00e9cifiques au projet (s'ils existent) pour vous assurer que votre contribution est en ligne avec les attentes du projet.</p> <p>N'oubliez pas de mettre \u00e0 jour la documentation si n\u00e9cessaire pour refl\u00e9ter vos changements, en particulier si vous ajoutez ou modifiez des fonctionnalit\u00e9s.</p> <p>Soyez ouvert aux commentaires et activement engag\u00e9 dans la discussion sur votre pull request si les membres de la communaut\u00e9 ou les mainteneurs ont des questions ou des pr\u00e9occupations.</p>"},{"location":"fr/basalt-socket/contribution.html#conclusion","title":"Conclusion","text":"<p>Votre temps et vos comp\u00e9tences peuvent grandement b\u00e9n\u00e9ficier au projet et \u00e0 la communaut\u00e9 dans son ensemble.</p> <p>Nous sommes impatients de voir vos contributions et sommes pr\u00eats \u00e0 collaborer pour int\u00e9grer de nouvelles id\u00e9es ou am\u00e9liorations.</p> <p>Merci de contribuer \u00e0 rendre Basalt Socket encore meilleur !</p>"},{"location":"fr/basalt-socket/index.html","title":"Basalt Socket","text":"<p>Warning</p> <p>Basalt est actuellement \u00e0 ses d\u00e9buts, s'il vous pla\u00eet soyez indulgent et h\u00e9sitez pas \u00e0 nous faire part de vos commentaires et suggestions.</p>"},{"location":"fr/basalt-socket/index.html#introduction","title":"Introduction","text":"<p>Basalt Socket est une biblioth\u00e8que l\u00e9g\u00e8re et performante con\u00e7ue pour la cr\u00e9ation de serveurs et clients WebSocket dans l'\u00e9cosyst\u00e8me Node.js. Elle offre une approche fluide et intuitive pour la gestion des sockets en temps r\u00e9el.</p> <p>La syntaxe \u00e9pur\u00e9e de Basalt Socket permet une int\u00e9gration transparente et directe des sockets dans vos applications, facilitant une incorporation harmonieuse avec l'\u00e9cosyst\u00e8me Node.js et ses divers frameworks. R\u00e9duisant la complexit\u00e9 tout en conservant une flexibilit\u00e9 totale. Basalt Socket est id\u00e9al pour les applications telles que les chats en direct, les tableaux de bord en temps r\u00e9el, ou les services de notifications push, se positionnant comme votre alli\u00e9 pour une impl\u00e9mentation efficace et rapide.</p>"},{"location":"fr/basalt-socket/index.html#pourquoi-basalt-socket","title":"Pourquoi Basalt Socket ?","text":"<ul> <li>Facilit\u00e9 d'utilisation : Basalt Socket est con\u00e7u pour \u00eatre simple et intuitif, avec des exemples d\u00e9taill\u00e9s et des guides pratiques disponibles dans notre section \"Getting Started\".</li> <li>Performance: Basalt Socket est bas\u00e9 sur \u00b5WebSockets une biblioth\u00e8que C++ l\u00e9g\u00e8re et performante.</li> </ul>"},{"location":"fr/basalt-socket/index.html#caracteristiques-principales","title":"Caract\u00e9ristiques Principales","text":"<ul> <li>Routage: Basalt Socket simplifie la cr\u00e9ation de routes pour les sockets et permet une organisation claire des points d'\u00e9coute.</li> <li>Cycle de vie et gestion d'\u00e9v\u00e9nements: Les d\u00e9veloppeurs peuvent accrocher des fonctions \u00e0 des \u00e9v\u00e9nements de cycle de vie tels que la connexion, l'upgrade, la d\u00e9connexion, et la r\u00e9ception de messages. Que cela soit global ou sp\u00e9cifique \u00e0 une route, Basalt Socket offre une flexibilit\u00e9 totale.</li> <li>Middleware: Les middlewares peuvent \u00eatre int\u00e9gr\u00e9s pour enrichir ou valider les messages entrants et sortants.</li> </ul>"},{"location":"fr/basalt-socket/index.html#conclusion","title":"Conclusion","text":"<p>Que vous d\u00e9butiez un nouveau projet ou cherchiez \u00e0 optimiser un syst\u00e8me existant, Basalt Socket est pr\u00eat \u00e0 devenir votre partenaire de confiance, rendant le processus de d\u00e9veloppement non seulement plus g\u00e9rable mais aussi plus agr\u00e9able.</p> <p>Nous sommes impatients de continuer \u00e0 \u00e9voluer avec vos besoins et de vous soutenir dans vos futurs d\u00e9fis de d\u00e9veloppement.</p>"},{"location":"fr/basalt-socket/license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Basalt</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"fr/basalt-socket/getting-started/index.html","title":"Getting Started","text":""},{"location":"fr/basalt-socket/getting-started/index.html#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Bienvenue dans le guide de d\u00e9marrage rapide de Basalt Socket !</p> <p>En quelques minutes, vous allez apprendre \u00e0 int\u00e9grer et \u00e0 utiliser les fonctionnalit\u00e9s puissantes de Basalt Socket dans votre projet Node.js.</p> <p>Pr\u00e9parez-vous \u00e0 simplifier votre d\u00e9veloppement backend.</p>"},{"location":"fr/basalt-socket/getting-started/index.html#prerequis","title":"Pr\u00e9requis","text":"<p>Pour utiliser Basalt Socket, vous devez avoir install\u00e9 Node.js et npm.</p> <p>Vous pouvez utiliser des gestionnaires de versions comme nvm</p> <p>Pour v\u00e9rifier que vous avez bien install\u00e9 Node.js et npm, ouvrez un terminal et tapez les commandes suivantes :</p> <p><pre><code>node -v\n</code></pre> <pre><code>npm -v\n</code></pre></p> node -vv20.9.0npm -v10.2.0"},{"location":"fr/basalt-socket/getting-started/index.html#installation","title":"Installation","text":"TypeScript <p>Basalt Socket est \u00e9crit en TypeScript et est livr\u00e9 avec des types TypeScript int\u00e9gr\u00e9s.</p> <p>Si vous utilisez TypeScript, vous n'avez pas besoin d'installer de types suppl\u00e9mentaires.</p> <p>Si vous utilisez JavaScript, vous pouvez ignorer les types TypeScript.</p> <p>Int\u00e9grer Basalt Socket dans votre projet est un jeu d'enfant.</p> <p>Package : @basalt-lab/basalt-socket</p> <p>Suivez ces \u00e9tapes pour l'ajouter \u00e0 votre projet Node.js :</p> <pre><code>npm i @basalt-lab/basalt-socket\n</code></pre> npm i @basalt-lab/basalt-socketadded 1 package, and audited 1 package in 1sfound 0 vulnerabilities"},{"location":"fr/basalt-socket/getting-started/lifecycle.html","title":"Lifecycle","text":""},{"location":"fr/basalt-socket/getting-started/lifecycle.html#cycle-de-vie-des-connexions-basalt-socket","title":"Cycle de Vie des Connexions Basalt Socket","text":"<p>Comprendre le cycle de vie des connexions socket dans Basalt Socket est essentiel pour g\u00e9rer efficacement la communication en temps r\u00e9el. Voici un aper\u00e7u des \u00e9tapes cl\u00e9s, depuis l'initiation d'une connexion jusqu'\u00e0 sa fermeture.</p>"},{"location":"fr/basalt-socket/getting-started/lifecycle.html#diagramme-de-cycle-de-vie","title":"Diagramme de Cycle de Vie","text":""},{"location":"fr/basalt-socket/getting-started/lifecycle.html#diagramme-de-cycle-de-vie-des-connexions","title":"Diagramme de Cycle de Vie des Connexions","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; GLOBAL_onUpgradeHook\n    GLOBAL_onUpgradeHook --&gt; EVENT_onUpgradeHook\n    EVENT_onUpgradeHook --&gt; GLOBAL_onConnectHook\n    GLOBAL_onConnectHook --&gt; EVENT_onConnectHook\n    EVENT_onConnectHook --&gt; [*]</code></pre> <p><code>GLOBAL_onUpgradeHook</code>: C'est l'\u00e9tat initial o\u00f9 une demande de connexion entrante est intercept\u00e9e. Il permet au serveur de g\u00e9rer la logique pr\u00e9alable \u00e0 la mise \u00e0 niveau applicable \u00e0 tous les \u00e9v\u00e9nements.</p> <p><code>EVENT_onUpgradeHook</code>: Apr\u00e8s l'accroche globale, cette accroche de mise \u00e0 niveau sp\u00e9cifique \u00e0 l'\u00e9v\u00e9nement est invoqu\u00e9e. Elle permet une logique personnalis\u00e9e avant que la connexion socket ne soit compl\u00e8tement \u00e9tablie.</p> <p><code>GLOBAL_onConnectHook</code>: \u00c0 ce stade, le serveur effectue des actions globales n\u00e9cessaires \u00e0 l'\u00e9tablissement d'une nouvelle connexion. Cela peut servir \u00e0 configurer l'\u00e9tat global ou \u00e0 effectuer des logs.</p> <p><code>EVENT_onConnectHook</code>: Similaire \u00e0 l'accroche de mise \u00e0 niveau, l'accroche de connexion au niveau de l'\u00e9v\u00e9nement permet de g\u00e9rer la logique de connexion pour des \u00e9v\u00e9nements ou routes sp\u00e9cifiques.</p> <p></p>"},{"location":"fr/basalt-socket/getting-started/lifecycle.html#diagramme-de-cycle-de-vie-des-messages","title":"Diagramme de Cycle de Vie des Messages","text":"<pre><code>stateDiagram-v2\n[*] --&gt; GLOBAL_onUpgradeHook\nGLOBAL_onUpgradeHook --&gt; EVENT_onUpgradeHook\nEVENT_onUpgradeHook --&gt; GLOBAL_onConnectHook\nGLOBAL_onConnectHook --&gt; EVENT_onConnectHook\nEVENT_onConnectHook --&gt; GLOBAL_onReceivedHook\nGLOBAL_onReceivedHook --&gt; EVENT_onReceivedHook\nEVENT_onReceivedHook --&gt; EVENT_preHandler\nEVENT_preHandler --&gt; EVENT_handler\nEVENT_handler --&gt; GLOBAL_onDisconnectHook\nGLOBAL_onDisconnectHook --&gt; [*]</code></pre> <p><code>GLOBAL_onReceivedHook</code>: Avant de traiter le message re\u00e7u, le serveur d\u00e9clenche cette accroche globale, qui peut \u00eatre utilis\u00e9e pour g\u00e9rer des t\u00e2ches telles que l'authentification ou les logs pour tous les messages.</p> <p><code>EVENT_onReceivedHook</code>: L'accroche de r\u00e9ception pour des \u00e9v\u00e9nements sp\u00e9cifiques est ensuite appel\u00e9e, offrant l'opportunit\u00e9 de traiter le message dans le contexte de son \u00e9v\u00e9nement destin\u00e9.</p> <p><code>EVENT_preHandler</code>: Ce pr\u00e9-manipulateur peut \u00eatre utilis\u00e9 comme middleware pour traiter ou modifier le message avant qu'il n'atteigne le manipulateur d'\u00e9v\u00e9nement final.</p> <p><code>EVENT_handler</code>: La logique principale pour traiter un message pour un \u00e9v\u00e9nement particulier est ex\u00e9cut\u00e9e ici. C'est l\u00e0 que r\u00e9sidera g\u00e9n\u00e9ralement la fonctionnalit\u00e9 principale de votre application.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"fr/basalt-socket/getting-started/lifecycle.html#diagramme-de-cycle-de-vie-de-deconnexion","title":"Diagramme de Cycle de Vie de D\u00e9connexion","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; GLOBAL_onDisconnectHook\n    GLOBAL_onDisconnectHook --&gt; EVENT_onDisconnectHook\n    EVENT_onDisconnectHook --&gt; [*]</code></pre> <p><code>GLOBAL_onDisconnectHook</code>: Lorsqu'une connexion est sur le point de se fermer, le serveur passe d'abord par la logique globale de d\u00e9connexion, qui pourrait g\u00e9rer des t\u00e2ches de nettoyage ou de logs.</p> <p><code>EVENT_onDisconnectHook</code>: Enfin, toute logique de d\u00e9connexion sp\u00e9cifique \u00e0 l'\u00e9v\u00e9nement est trait\u00e9e, ce qui pourrait \u00eatre utile pour lib\u00e9rer des ressources li\u00e9es \u00e0 un \u00e9v\u00e9nement sp\u00e9cifique.</p> <p></p> <p></p> <p></p> <p>Le cycle de vie des connexions avec Basalt Socket est con\u00e7u pour fournir des accroches tant au niveau global qu'au niveau de l'\u00e9v\u00e9nement, vous donnant la flexibilit\u00e9 d'incorporer une logique personnalis\u00e9e \u00e0 diff\u00e9rentes \u00e9tapes du cycle de vie de la connexion socket.</p>"},{"location":"fr/basalt-socket/getting-started/example/client.html","title":"Client","text":""},{"location":"fr/basalt-socket/getting-started/example/client.html#connexion-au-serveur","title":"Connexion au serveur","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketClient\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketClient: BasaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test');\n\nbasaltSocketClient.connect()\n    .then((): void =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n    })\n    .catch((err: Error): void =&gt; {\n        console.error(err);\n    });\n</code></pre> <pre><code>const {\n    BasaltSocketClient\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test');\n\nbasaltSocketClient.connect()\n    .then(() =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n    })\n    .catch((err) =&gt; {\n        console.error(err);\n    });\n</code></pre> node client.jsConnected"},{"location":"fr/basalt-socket/getting-started/example/client.html#ajout-dun-listener","title":"Ajout d'un listener","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketClient\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketClient: BasaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test/health');\n\nbasaltSocketClient.connect()\n    .then((): void =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n        basaltSocketClient.addListener('message', (message: unknown): void =&gt; {\n            console.log(message);\n        });\n})\n.catch((err: Error): void =&gt; {\n    console.error(err);\n});\n</code></pre> <pre><code>const {\n    BasaltSocketClient\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test/health');\n\nbasaltSocketClient.connect()\n    .then(() =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n        basaltSocketClient.addListener('message', (message) =&gt; {\n            console.log(message);\n        });\n    })\n    .catch((err) =&gt; {\n        console.error(err);\n    });\n</code></pre> node client.jsConnectedHello World"},{"location":"fr/basalt-socket/getting-started/example/client.html#deconnexion-du-serveur","title":"D\u00e9connexion du serveur","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketClient\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketClient: BasaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test/health');\n\nbasaltSocketClient.connect()\n    .then(async (): Promise&lt;void&gt; =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n\n    basaltSocketClient.addListener('message', (message: unknown): void =&gt; {\n        console.log(message);\n    });\n    await basaltSocketClient.disconnect();\n    console.log('Disconnected');\n})\n.catch((err: Error): void =&gt; {\n    console.error(err);\n});\n</code></pre> <pre><code>const {\n    BasaltSocketClient\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketClient = new BasaltSocketClient('ws://localhost:3000/test/health');\n\nbasaltSocketClient.connect()\n    .then(async () =&gt; {\n        console.log('Connected');\n        basaltSocketClient.send('Hello World');\n\n        basaltSocketClient.addListener('message', (message) =&gt; {\n            console.log(message);\n        });\n        await basaltSocketClient.disconnect();\n        console.log('Disconnected');\n    })\n    .catch((err) =&gt; {\n        console.error(err);\n    });\n</code></pre> node client.jsConnectedHello WorldDisconnected"},{"location":"fr/basalt-socket/getting-started/example/server.html","title":"Server","text":""},{"location":"fr/basalt-socket/getting-started/example/server.html#creation-dun-serveur","title":"Cr\u00e9ation d'un serveur","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nbasaltSocketServer.listen(3000); // default verbose is true\n</code></pre> <pre><code>const { BasaltSocketServer } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nbasaltSocketServer.listen(3000); // default verbose is true\n</code></pre> node server.jsListening to port 3000"},{"location":"fr/basalt-socket/getting-started/example/server.html#ajout-dun-evenement","title":"Ajout d'un evenement","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000"},{"location":"fr/basalt-socket/getting-started/example/server.html#ajout-dun-evenement-avec-un-handler","title":"Ajout d'un evenement avec un handler","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: (): void =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: () =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send two messagestesttest"},{"location":"fr/basalt-socket/getting-started/example/server.html#ajout-dun-evenement-avec-un-handler-et-un-prehandler","title":"Ajout d'un evenement avec un handler et un preHandler","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    preHandler: [\n        (): void =&gt; {\n            console.log('preHandler 1');\n        }\n    ],\n    handler: (): void =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    preHandler: [\n        () =&gt; {\n            console.log('preHandler 1');\n        }\n    ],\n    handler: () =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send two messagespreHandler 1testpreHandler 1test"},{"location":"fr/basalt-socket/getting-started/example/server.html#ajout-dun-evenement-avec-un-handler-et-multiple-prehandler","title":"Ajout d'un evenement avec un handler et multiple preHandler","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    preHandler: [\n        (): void =&gt; {\n            console.log('preHandler 1');\n        },\n        (): void =&gt; {\n            console.log('preHandler 2');\n        }\n    ],\n    handler: (): void =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    preHandler: [\n        () =&gt; {\n            console.log('preHandler 1');\n        },\n        () =&gt; {\n            console.log('preHandler 2');\n        }\n    ],\n    handler: () =&gt; {\n        console.log('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send two messagespreHandler 1preHandler 2testpreHandler 1preHandler 2test"},{"location":"fr/basalt-socket/getting-started/example/server.html#pubsub","title":"PubSub","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents, IBasaltWebSocket } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('health', {\n\n    onConnectHook: (ws: IBasaltWebSocket): void =&gt; {\n        ws.subscribe('test');\n    },\n\n    handler: (ws: IBasaltWebSocket): void =&gt; {\n        ws.publish('test', 'Hello World');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('health', {\n\n    onConnectHook: (ws) =&gt; {\n        ws.subscribe('test');\n    },\n\n    handler: (ws) =&gt; {\n        ws.publish('test', 'Hello World');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000 <p>example : two client connect to the server on the event 'health' and client subscribe to 'test' and server publish 'Hello World' And client listen to 'message' event.</p> Connected ConnectedHello World"},{"location":"fr/basalt-socket/getting-started/example/server.html#handler-emit","title":"Handler emit","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents, IBasaltWebSocket } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: (ws: IBasaltWebSocket): void =&gt; {\n        ws.send('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: (ws) =&gt; {\n        ws.send('test');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send message and server emit message"},{"location":"fr/basalt-socket/getting-started/example/server.html#handler-get-message","title":"Handler get message","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents, IBasaltWebSocket } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: (_: IBasaltWebSocket, message: ArrayBuffer ): void =&gt; {\n        const messageString: string = Buffer.from(message).toString();\n        console.log(messageString);\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    handler: (_, message) =&gt; {\n        const messageString = Buffer.from(message).toString();\n        console.log(messageString);\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send message 'test' and server log messagetest"},{"location":"fr/basalt-socket/getting-started/example/server.html#global-onupgradehook","title":"Global onUpgradeHook","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onUpgradeHook = (): void =&gt; {\n    console.log('onUpgradeHook');\n};\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onUpgradeHook = () =&gt; {\n    console.log('onUpgradeHook');\n};\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' onUpgradeHook"},{"location":"fr/basalt-socket/getting-started/example/server.html#event-onupgradehook","title":"Event onUpgradeHook","text":"TypeScriptJavaScript <pre><code>import { BasaltSocketServer, BasaltSocketEvents } from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onUpgradeHook: (): void =&gt; {\n        console.log('onUpgradeHook');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const { BasaltSocketServer, BasaltSocketEvents } = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onUpgradeHook: () =&gt; {\n        console.log('onUpgradeHook');\n    }\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test'onUpgradeHook"},{"location":"fr/basalt-socket/getting-started/example/server.html#global-onupgradehook-set-data-in-userdata","title":"Global onUpgradeHook set data in UserData","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n    IBasaltHttpResponse,\n    IBasaltHttpRequest,\n    IBasaltWebSocket\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\ninterface IUserData {\n    host: string;\n}\n\nbasaltSocketServer.onUpgradeHook = (_: IBasaltHttpResponse, req: IBasaltHttpRequest): IUserData =&gt; {\n    console.log('Upgrade hook');\nconst host: string = req.getHeader('host');\n    return {\n        host,\n    };\n};\n\nbasaltSocketEvents.add('test', {\n    handler: (ws: IBasaltWebSocket): void =&gt; {\n        const userData: IUserData = ws.getUserData() as IUserData;\n        console.log(userData.host);\n    },\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onUpgradeHook = (_, req) =&gt; {\n    console.log('Upgrade hook');\n    const host = req.getHeader('host');\n    return {\n        host,\n    };\n};\n\nbasaltSocketEvents.add('test', {\n    handler: (ws) =&gt; {\n        const userData = ws.getUserData();\n        console.log(userData.host);\n    },\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test'Upgrade hook# example : client send messagelocalhost:3000"},{"location":"fr/basalt-socket/getting-started/example/server.html#event-onupgradehook-set-data-in-userdata","title":"Event onUpgradeHook set data in UserData","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n    IBasaltHttpResponse,\n    IBasaltHttpRequest,\n    IBasaltWebSocket\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\ninterface IUserData {\n    host: string;\n}\n\nbasaltSocketEvents.add('test', {\n    onUpgradeHook: (_: IBasaltHttpResponse, req: IBasaltHttpRequest): IUserData =&gt; {\n        console.log('Upgrade hook');\n        const host: string = req.getHeader('host');\n        return {\n            host,\n        };\n    },\n    handler: (ws: IBasaltWebSocket): void =&gt; {\n        const userData: IUserData = ws.getUserData() as IUserData;\n        console.log(userData.host);\n    },\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onUpgradeHook: (_, req) =&gt; {\n        console.log('Upgrade hook');\n        const host: string = req.getHeader('host');\n        return {\n            host,\n        };\n    },\n    handler: (ws) =&gt; {\n        const userData = ws.getUserData();\n        console.log(userData.host);\n    },\n});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test'Upgrade hook# example : client send messagelocalhost:3000"},{"location":"fr/basalt-socket/getting-started/example/server.html#global-onconnecthook","title":"Global onConnectHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onConnectHook = (): void =&gt; {\n    console.log('Client connected');\n};\n\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onConnectHook = () =&gt; {\n    console.log('Client connected');\n};\n\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test'Client connected"},{"location":"fr/basalt-socket/getting-started/example/server.html#event-onconnecthook","title":"Event onConnectHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onConnectHook: (): void =&gt; {\n        console.log('Client connected');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onConnectHook: () =&gt; {\n        console.log('Client connected');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test'Client connected"},{"location":"fr/basalt-socket/getting-started/example/server.html#global-onreceivedhook","title":"Global onReceivedHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n    IBasaltWebSocket\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onReceivedHook = (): void =&gt; {\n    console.log('onReceivedHook');\n};\n\nbasaltSocketEvents.add('test', {}); \nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onReceivedHook = () =&gt; {\n    console.log('onReceivedHook');\n};\n\nbasaltSocketEvents.add('test', {});\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send messageonReceivedHook"},{"location":"fr/basalt-socket/getting-started/example/server.html#event-onreceivedhook","title":"Event onReceivedHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n    IBasaltWebSocket\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onReceivedHook: (): void =&gt; {\n        console.log('onReceivedHook');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onReceivedHook: () =&gt; {\n        console.log('onReceivedHook');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client send messageonReceivedHook"},{"location":"fr/basalt-socket/getting-started/example/server.html#global-ondisconnecthook","title":"Global onDisconnectHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onDisconnectHook = (): void =&gt; {\n    console.log('onDisconnectHook');\n};\n\nbasaltSocketEvents.add('test', {});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketServer.onDisconnectHook = () =&gt; {\n    console.log('onDisconnectHook');\n};\n\nbasaltSocketEvents.add('test', {});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client disconnectonDisconnectHook"},{"location":"fr/basalt-socket/getting-started/example/server.html#event-ondisconnecthook","title":"Event onDisconnectHook","text":"TypeScriptJavaScript <pre><code>import {\n    BasaltSocketServer,\n    BasaltSocketEvents,\n} from '@basalt-lab/basalt-socket';\n\nconst basaltSocketServer: BasaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents: BasaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onDisconnectHook: (): void =&gt; {\n        console.log('onDisconnectHook');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> <pre><code>const {\n    BasaltSocketServer,\n    BasaltSocketEvents\n} = require('@basalt-lab/basalt-socket');\n\nconst basaltSocketServer = new BasaltSocketServer();\nconst basaltSocketEvents = new BasaltSocketEvents();\n\nbasaltSocketEvents.add('test', {\n    onDisconnectHook: () =&gt; {\n        console.log('onDisconnectHook');\n    }\n});\n\nbasaltSocketServer.use('/', basaltSocketEvents.events);\nbasaltSocketServer.listen(3000);\n</code></pre> node server.jsListening to port 3000# example : connect to the server on the event 'test' and client disconnectonDisconnectHook"}]}